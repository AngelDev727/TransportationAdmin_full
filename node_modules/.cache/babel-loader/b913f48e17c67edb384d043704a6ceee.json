{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rapunzel/Documents/tb-admin 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/rapunzel/Documents/tb-admin 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/rapunzel/Documents/tb-admin 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import{useDataProvider,Loading,Error}from'react-admin';import{ResponsiveContainer,AreaChart,Area,XAxis,YAxis,CartesianGrid,Tooltip}from'recharts';function getTimestampFirstDayOfKey(datetype){var date=new Date();date.setDate(1);date.setHours(0);date.setMinutes(0);date.setSeconds(0);if(datetype===\"month\"){return Math.round(Number(date.valueOf()/1000));}else{date.setMonth(0);return Math.round(Number(date.valueOf()/1000));}}var getDateTime=function getDateTime(value,datetype){if(value===undefined){return\"\";}else{var timestamp=new Date(value===undefined?new Date():value*1000);var year=timestamp.getFullYear();var month=(1+timestamp.getMonth()).toString();month=month.length>1?month:'0'+month;// return timestamp.toLocaleString();\nif(datetype===\"month\")return timestamp.toLocaleDateString();else return month+\"/\"+year;}};var DashChart=function DashChart(_ref){var datetype=_ref.datetype;var dataProvider=useDataProvider();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];useEffect(function(){dataProvider('GET_LIST','notifications',{sort:{field:'report_timestamp',order:'ASC'},pagination:{page:1,perPage:10000000}}).then(function(_ref2){var data=_ref2.data,total=_ref2.total;setData(data);setLoading(false);}).catch(function(error){setError(error);setLoading(false);});},[]);var chartData=[];if(loading)return/*#__PURE__*/_jsx(Loading,{});if(error)return/*#__PURE__*/_jsx(Error,{});var preDate=\"\";data.map(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(answer){var selDate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!data||data.length===0)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:if(!(answer.report_timestamp<getTimestampFirstDayOfKey(datetype))){_context.next=4;break;}return _context.abrupt(\"return\");case 4:selDate=getDateTime(answer.report_timestamp,datetype);if(preDate===selDate){chartData[chartData.length-1].Notifications+=1;}else{chartData[chartData.length]={name:selDate,Notifications:1};preDate=selDate;}case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref3.apply(this,arguments);};}());return/*#__PURE__*/_jsx(ResponsiveContainer,{height:300,width:\"99%\",children:/*#__PURE__*/_jsxs(AreaChart// width={500} height={400} \n,{data:chartData,margin:{top:10,right:30,left:30,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"Notifications\",stroke:\"#8884d8\",fill:\"#8884d8\"})]})});};export default DashChart;","map":{"version":3,"sources":["/Users/rapunzel/Documents/tb-admin 2/src/components/DashChart.js"],"names":["React","useState","useEffect","useDataProvider","Loading","Error","ResponsiveContainer","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","getTimestampFirstDayOfKey","datetype","date","Date","setDate","setHours","setMinutes","setSeconds","Math","round","Number","valueOf","setMonth","getDateTime","value","undefined","timestamp","year","getFullYear","month","getMonth","toString","length","toLocaleDateString","DashChart","dataProvider","data","setData","loading","setLoading","error","setError","sort","field","order","pagination","page","perPage","then","total","catch","chartData","preDate","map","answer","report_timestamp","selDate","Notifications","name","top","right","left","bottom"],"mappings":"siBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,eAAT,CAA0BC,OAA1B,CAAmCC,KAAnC,KAA+C,aAA/C,CACA,OAASC,mBAAT,CAA8BC,SAA9B,CAAyCC,IAAzC,CAA+CC,KAA/C,CAAsDC,KAAtD,CAA6DC,aAA7D,CAA4EC,OAA5E,KAA0F,UAA1F,CAGA,QAASC,CAAAA,yBAAT,CAAmCC,QAAnC,CAA6C,CACzC,GAAIC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,EAAX,CACAD,IAAI,CAACE,OAAL,CAAa,CAAb,EACAF,IAAI,CAACG,QAAL,CAAc,CAAd,EACAH,IAAI,CAACI,UAAL,CAAgB,CAAhB,EACAJ,IAAI,CAACK,UAAL,CAAgB,CAAhB,EAEA,GAAIN,QAAQ,GAAK,OAAjB,CAA0B,CACtB,MAAOO,CAAAA,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACR,IAAI,CAACS,OAAL,GAAiB,IAAlB,CAAjB,CAAP,CACH,CAFD,IAEO,CACHT,IAAI,CAACU,QAAL,CAAc,CAAd,EACA,MAAOJ,CAAAA,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACR,IAAI,CAACS,OAAL,GAAiB,IAAlB,CAAjB,CAAP,CACH,CACJ,CAED,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQb,QAAR,CAAqB,CACrC,GAAIa,KAAK,GAAKC,SAAd,CAAyB,CACrB,MAAO,EAAP,CACH,CAFD,IAEO,CACH,GAAMC,CAAAA,SAAS,CAAG,GAAIb,CAAAA,IAAJ,CAASW,KAAK,GAAKC,SAAV,CAAsB,GAAIZ,CAAAA,IAAJ,EAAtB,CAAmCW,KAAK,CAAG,IAApD,CAAlB,CACA,GAAIG,CAAAA,IAAI,CAAGD,SAAS,CAACE,WAAV,EAAX,CACA,GAAIC,CAAAA,KAAK,CAAG,CAAC,EAAIH,SAAS,CAACI,QAAV,EAAL,EAA2BC,QAA3B,EAAZ,CACAF,KAAK,CAAGA,KAAK,CAACG,MAAN,CAAe,CAAf,CAAmBH,KAAnB,CAA2B,IAAMA,KAAzC,CAEA;AACA,GAAIlB,QAAQ,GAAK,OAAjB,CACI,MAAOe,CAAAA,SAAS,CAACO,kBAAV,EAAP,CADJ,IAGI,OAAOJ,CAAAA,KAAK,CAAG,GAAR,CAAcF,IAArB,CACP,CACJ,CAfD,CAiBA,GAAMO,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAkB,IAAfvB,CAAAA,QAAe,MAAfA,QAAe,CAEhC,GAAMwB,CAAAA,YAAY,CAAGnC,eAAe,EAApC,CAFgC,cAGRF,QAAQ,CAAC,EAAD,CAHA,wCAGzBsC,IAHyB,eAGnBC,OAHmB,8BAIFvC,QAAQ,CAAC,IAAD,CAJN,yCAIzBwC,OAJyB,eAIhBC,UAJgB,8BAKNzC,QAAQ,EALF,yCAKzB0C,KALyB,eAKlBC,QALkB,eAOhC1C,SAAS,CAAC,UAAM,CACZoC,YAAY,CAAC,UAAD,CAAa,eAAb,CAA8B,CACtCO,IAAI,CAAE,CAAEC,KAAK,CAAE,kBAAT,CAA6BC,KAAK,CAAE,KAApC,CADgC,CAEtCC,UAAU,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAWC,OAAO,CAAE,QAApB,CAF0B,CAA9B,CAAZ,CAIKC,IAJL,CAIU,eAAqB,IAAlBZ,CAAAA,IAAkB,OAAlBA,IAAkB,CAAZa,KAAY,OAAZA,KAAY,CACvBZ,OAAO,CAACD,IAAD,CAAP,CACAG,UAAU,CAAC,KAAD,CAAV,CACH,CAPL,EAQKW,KARL,CAQW,SAAAV,KAAK,CAAI,CACZC,QAAQ,CAACD,KAAD,CAAR,CACAD,UAAU,CAAC,KAAD,CAAV,CACH,CAXL,EAYH,CAbQ,CAaN,EAbM,CAAT,CAeA,GAAIY,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIb,OAAJ,CAAa,mBAAO,KAAC,OAAD,IAAP,CACb,GAAIE,KAAJ,CAAW,mBAAO,KAAC,KAAD,IAAP,CAEX,GAAIY,CAAAA,OAAO,CAAG,EAAd,CACAhB,IAAI,CAACiB,GAAL,2FAAS,iBAAMC,MAAN,mIACD,CAAClB,IAAD,EAASA,IAAI,CAACJ,MAAL,GAAgB,CADxB,uEAKDsB,MAAM,CAACC,gBAAP,CAA0B7C,yBAAyB,CAACC,QAAD,CALlD,kEASC6C,OATD,CASWjC,WAAW,CAAC+B,MAAM,CAACC,gBAAR,CAA0B5C,QAA1B,CATtB,CAWL,GAAIyC,OAAO,GAAKI,OAAhB,CAAyB,CACrBL,SAAS,CAACA,SAAS,CAACnB,MAAV,CAAmB,CAApB,CAAT,CAAgCyB,aAAhC,EAAiD,CAAjD,CACH,CAFD,IAEO,CACHN,SAAS,CAACA,SAAS,CAACnB,MAAX,CAAT,CAA8B,CAC1B0B,IAAI,CAAEF,OADoB,CAE1BC,aAAa,CAAI,CAFS,CAA9B,CAIAL,OAAO,CAAGI,OAAV,CACH,CAnBI,sDAAT,iEAsBA,mBACI,KAAC,mBAAD,EAAqB,MAAM,CAAE,GAA7B,CAAkC,KAAK,CAAC,KAAxC,uBACI,MAAC,SACD;AADA,EAEA,IAAI,CAAEL,SAFN,CAEiB,MAAM,CAAE,CAAEQ,GAAG,CAAE,EAAP,CAAWC,KAAK,CAAE,EAAlB,CAAsBC,IAAI,CAAE,EAA5B,CAAgCC,MAAM,CAAE,CAAxC,CAFzB,wBAGI,KAAC,aAAD,EAAe,eAAe,CAAC,KAA/B,EAHJ,cAII,KAAC,KAAD,EAAO,OAAO,CAAC,MAAf,EAJJ,cAKI,KAAC,KAAD,IALJ,cAMI,KAAC,OAAD,IANJ,cAOI,KAAC,IAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,OAAO,CAAC,eAA9B,CAA8C,MAAM,CAAC,SAArD,CAA+D,IAAI,CAAC,SAApE,EAPJ,GADJ,EADJ,CAcH,CA/DD,CAqEA,cAAe5B,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDataProvider, Loading, Error} from 'react-admin';\nimport { ResponsiveContainer, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip} from 'recharts';\nimport PropTypes from 'prop-types';\n\nfunction getTimestampFirstDayOfKey(datetype) {\n    var date = new Date();\n    date.setDate(1);\n    date.setHours(0);\n    date.setMinutes(0);\n    date.setSeconds(0);\n    \n    if (datetype === \"month\") {\n        return Math.round(Number(date.valueOf() / 1000));\n    } else {\n        date.setMonth(0);\n        return Math.round(Number(date.valueOf() / 1000));\n    }\n}\n\nconst getDateTime = (value, datetype) => {\n    if (value === undefined) {\n        return \"\";\n    } else {\n        const timestamp = new Date(value === undefined ? new Date() : value * 1000);\n        var year = timestamp.getFullYear();\n        var month = (1 + timestamp.getMonth()).toString();\n        month = month.length > 1 ? month : '0' + month;\n        \n        // return timestamp.toLocaleString();\n        if (datetype === \"month\")\n            return timestamp.toLocaleDateString();\n        else \n            return month + \"/\" + year;\n    }\n};\n\nconst DashChart = ({ datetype }) => {\n\n    const dataProvider = useDataProvider();\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        dataProvider('GET_LIST', 'notifications', {\n            sort: { field: 'report_timestamp', order: 'ASC' },\n            pagination: { page: 1, perPage: 10000000 },\n        })\n            .then(({ data, total }) => {\n                setData(data);              \n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            })\n    }, []);\n\n    var chartData = [];\n    if (loading) return <Loading />;\n    if (error) return <Error />;\n\n    var preDate = \"\"\n    data.map(async answer => {\n        if (!data || data.length === 0) {\n            return;\n        }\n\n        if (answer.report_timestamp < getTimestampFirstDayOfKey(datetype)) {\n            return;\n        }\n\n        const selDate = getDateTime(answer.report_timestamp, datetype);\n\n        if (preDate === selDate) {\n            chartData[chartData.length - 1].Notifications += 1;\n        } else {\n            chartData[chartData.length] = {\n                name: selDate,\n                Notifications  : 1\n            };\n            preDate = selDate;\n        }\n    });\n\n    return (\n        <ResponsiveContainer height={300} width='99%'>\n            <AreaChart \n            // width={500} height={400} \n            data={chartData} margin={{ top: 10, right: 30, left: 30, bottom: 0}}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"Notifications\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n            </AreaChart>\n        </ResponsiveContainer>  \n        \n    );\n}\n\nDashChart.propTypes = {\n    datetype: PropTypes.string.isRequired,\n};\n\nexport default DashChart;"]},"metadata":{},"sourceType":"module"}