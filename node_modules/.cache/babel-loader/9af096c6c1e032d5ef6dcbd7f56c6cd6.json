{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/MyDATA/Mega_data/Project/2020-11/08-TransportationAdmin/tb-admin 2/src/components/CommentField.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField } from 'react-admin';\nimport { useDataProvider, Loading, Error } from 'react-admin';\n\nconst CommentField = ({\n  record\n}) => {\n  _s();\n\n  const dataProvider = useDataProvider();\n  const [total, setTotal] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    dataProvider.getList('reports', {\n      pagination: {\n        page: 1,\n        perPage: 100000\n      },\n      sort: {},\n      filter: {}\n    }).then(({\n      data,\n      total\n    }) => {\n      setTotal(total);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  var comments = {\n    result: total + \"  Comments\"\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  if (!total) return /*#__PURE__*/_jsxDEV(TextField, {\n    record: comments,\n    source: \"result\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    record: comments,\n    source: \"result\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CommentField, \"/Xwy0mQnGbY+xUrzCpYyYjkeK0E=\", false, function () {\n  return [useDataProvider];\n});\n\n_c = CommentField;\nexport default CommentField;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentField\");","map":{"version":3,"sources":["/Volumes/MyDATA/Mega_data/Project/2020-11/08-TransportationAdmin/tb-admin 2/src/components/CommentField.js"],"names":["React","useState","useEffect","TextField","useDataProvider","Loading","Error","CommentField","record","dataProvider","total","setTotal","loading","setLoading","error","setError","getList","pagination","page","perPage","sort","filter","then","data","catch","comments","result"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,SADF,QAEO,aAFP;AAGA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,KAAnC,QAAgD,aAAhD;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AACjC,QAAMC,YAAY,GAAGL,eAAe,EAApC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,YAAY,CAACO,OAAb,CAAqB,SAArB,EAAgC;AAAEC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAYC,QAAAA,OAAO,EAAE;AAArB,OAAd;AAA6CC,MAAAA,IAAI,EAAE,EAAnD;AAAuDC,MAAAA,MAAM,EAAE;AAA/D,KAAhC,EACKC,IADL,CACU,CAAC;AAAEC,MAAAA,IAAF;AAAQb,MAAAA;AAAR,KAAD,KAAqB;AACvBC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJL,EAKKW,KALL,CAKWV,KAAK,IAAI;AACZC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KARL;AASH,GAVQ,EAUN,EAVM,CAAT;AAYA,MAAIY,QAAQ,GAAG;AACbC,IAAAA,MAAM,EAAEhB,KAAK,GAAG;AADH,GAAf;AAIA,MAAIE,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIE,KAAJ,EAAW,oBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,MAAI,CAACJ,KAAL,EAAY,oBAAO,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEe,QAAnB;AAA6B,IAAA,MAAM,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AAEZ,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEA,QAAnB;AAA6B,IAAA,MAAM,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA5BH;;GAAMlB,Y;UACmBH,e;;;KADnBG,Y;AA8BJ,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  TextField\n} from 'react-admin';\nimport { useDataProvider, Loading, Error } from 'react-admin';\n\nconst CommentField = ({ record }) => {\n    const dataProvider = useDataProvider();\n    const [total, setTotal] = useState();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n    useEffect(() => {\n        dataProvider.getList('reports', { pagination: { page: 1 , perPage: 100000 }, sort: {}, filter: {} })\n            .then(({ data, total }) => {\n                setTotal(total);                \n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            })\n    }, []);\n    \n    var comments = {\n      result: total + \"  Comments\"\n    }\n  \n    if (loading) return <Loading />;\n    if (error) return <Error />;\n    if (!total) return <TextField record={comments} source=\"result\" />;\n  \n    return (\n      <TextField record={comments} source=\"result\" />\n    )\n  };\n\n  export default CommentField;"]},"metadata":{},"sourceType":"module"}