{"ast":null,"code":"import _objectSpread from\"/Users/rapunzel/Documents/tb-admin 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/rapunzel/Documents/tb-admin 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/rapunzel/Documents/tb-admin 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/* globals localStorage */import{AUTH_LOGIN,AUTH_LOGOUT,AUTH_CHECK,AUTH_GET_PERMISSIONS}from'react-admin';import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var baseConfig={userProfilePath:'/admin/',userAdminProp:'is_admin',localStorageTokenName:'RAFirebaseClientToken',handleAuthStateChange:function(){var _handleAuthStateChange=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(auth,config){var snapshot,profile,firebaseToken,user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!auth){_context.next=20;break;}_context.next=3;return firebase.firestore().doc(config.userProfilePath+auth.user.uid).get();case 3:snapshot=_context.sent;profile=snapshot.data();console.log(\"gisng\",config.userProfilePath+auth.user.uid);if(!(profile&&profile[config.userAdminProp])){_context.next=15;break;}_context.next=9;return auth.user.getIdToken();case 9:firebaseToken=_context.sent;user={auth:auth,profile:profile,firebaseToken:firebaseToken};localStorage.setItem(config.localStorageTokenName,firebaseToken);return _context.abrupt(\"return\",user);case 15:firebase.auth().signOut();localStorage.removeItem(config.localStorageTokenName);throw new Error('sign_in_error');case 18:_context.next=22;break;case 20:localStorage.removeItem(config.localStorageTokenName);throw new Error('sign_in_error');case 22:case\"end\":return _context.stop();}}},_callee);}));function handleAuthStateChange(_x,_x2){return _handleAuthStateChange.apply(this,arguments);}return handleAuthStateChange;}()};export default(function(){var config=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};config=_objectSpread(_objectSpread({},baseConfig),config);var firebaseLoaded=function firebaseLoaded(){return new Promise(function(resolve){firebase.auth().onAuthStateChanged(resolve);});};return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(type,params){var token,username,password,alreadySignedIn,auth;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(type===AUTH_LOGOUT)){_context2.next=3;break;}config.handleAuthStateChange(null,config).catch(function(){});return _context2.abrupt(\"return\",firebase.auth().signOut());case 3:if(!firebase.auth().currentUser){_context2.next=6;break;}_context2.next=6;return firebase.auth().currentUser.reload();case 6:if(!(type===AUTH_CHECK)){_context2.next=12;break;}_context2.next=9;return firebaseLoaded();case 9:if(firebase.auth().currentUser){_context2.next=11;break;}throw new Error('sign_in_error');case 11:return _context2.abrupt(\"return\",true);case 12:if(!(type===AUTH_GET_PERMISSIONS)){_context2.next=22;break;}console.log('AUTH_GET_PERMISSIONS');_context2.next=16;return firebaseLoaded();case 16:if(firebase.auth().currentUser){_context2.next=18;break;}throw new Error('sign_in_error');case 18:_context2.next=20;return firebase.auth().currentUser.getIdTokenResult();case 20:token=_context2.sent;return _context2.abrupt(\"return\",token.claims);case 22:if(!(type===AUTH_LOGIN)){_context2.next=30;break;}username=params.username,password=params.password,alreadySignedIn=params.alreadySignedIn;auth=firebase.auth().currentUser;if(!(!auth||!alreadySignedIn)){_context2.next=29;break;}_context2.next=28;return firebase.auth().signInWithEmailAndPassword(username,password);case 28:auth=_context2.sent;case 29:return _context2.abrupt(\"return\",config.handleAuthStateChange(auth,config));case 30:return _context2.abrupt(\"return\",false);case 31:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref.apply(this,arguments);};}();});","map":{"version":3,"sources":["/Users/rapunzel/Documents/tb-admin 2/src/lib/AuthProvider.js"],"names":["AUTH_LOGIN","AUTH_LOGOUT","AUTH_CHECK","AUTH_GET_PERMISSIONS","firebase","baseConfig","userProfilePath","userAdminProp","localStorageTokenName","handleAuthStateChange","auth","config","firestore","doc","user","uid","get","snapshot","profile","data","console","log","getIdToken","firebaseToken","localStorage","setItem","signOut","removeItem","Error","firebaseLoaded","Promise","resolve","onAuthStateChanged","type","params","catch","currentUser","reload","getIdTokenResult","token","claims","username","password","alreadySignedIn","signInWithEmailAndPassword"],"mappings":"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","sourcesContent":["/* globals localStorage */\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_CHECK, AUTH_GET_PERMISSIONS } from 'react-admin';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst baseConfig = {\n    userProfilePath: '/admin/',\n    userAdminProp: 'is_admin',\n    localStorageTokenName: 'RAFirebaseClientToken',\n    handleAuthStateChange: async (auth, config) => {\n        if (auth) {\n            const snapshot = await firebase\n            .firestore()\n            .doc(config.userProfilePath + auth.user.uid)\n            .get();\n            const profile = snapshot.data();\n\n            console.log(\"gisng\", config.userProfilePath + auth.user.uid);\n            if (profile && profile[config.userAdminProp]) {\n                const firebaseToken = await auth.user.getIdToken();\n                let user = { auth, profile, firebaseToken };\n                localStorage.setItem(config.localStorageTokenName, firebaseToken);\n                return user;\n            } else {\n                firebase.auth().signOut();\n                localStorage.removeItem(config.localStorageTokenName);\n                throw new Error('sign_in_error');\n        }\n        } else {\n            localStorage.removeItem(config.localStorageTokenName);\n            throw new Error('sign_in_error');\n        }\n    }\n};\n\nexport default (config = {}) => {\n    config = { ...baseConfig, ...config };\n\n    const firebaseLoaded = () =>\n        new Promise(resolve => {\n            firebase.auth().onAuthStateChanged(resolve);\n        });\n\n    return async (type, params) => {\n        if (type === AUTH_LOGOUT) {\n            config.handleAuthStateChange(null, config).catch(() => {});\n            return firebase.auth().signOut();\n        }\n\n        if (firebase.auth().currentUser) {\n            await firebase.auth().currentUser.reload();\n        }\n\n        if (type === AUTH_CHECK) {\n            await firebaseLoaded();\n\n            if (!firebase.auth().currentUser) {\n                throw new Error('sign_in_error');\n            }\n            return true;\n        }\n\n        if (type === AUTH_GET_PERMISSIONS) {\n            console.log('AUTH_GET_PERMISSIONS');\n            await firebaseLoaded();\n\n            if (!firebase.auth().currentUser) {\n                throw new Error('sign_in_error');\n            }\n\n            const token = await firebase.auth().currentUser.getIdTokenResult();\n            return token.claims;\n        }\n\n        if (type === AUTH_LOGIN) {\n            const { username, password, alreadySignedIn } = params;\n            let auth = firebase.auth().currentUser;\n\n            if (!auth || !alreadySignedIn) {\n                auth = await firebase.auth().signInWithEmailAndPassword(username, password);\n            }\n            return config.handleAuthStateChange(auth, config);\n        }\n\n        return false;\n    };\n};"]},"metadata":{},"sourceType":"module"}