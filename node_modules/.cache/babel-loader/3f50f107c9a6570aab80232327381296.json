{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rapunzel/Documents/tb-admin 2/src/components/DashChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDataProvider, Loading, Error, Button } from 'react-admin';\nimport { ResponsiveContainer, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts'; // const data = [\n//     {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\n//     {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\n//     {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\n//     {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\n//     {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\n//     {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\n//     {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\n// ];\n\nfunction getTimestampFirstDayInThisMonth() {\n  var date = new Date();\n  date.setDate(1);\n  return Math.round(Number(date.valueOf() / 1000));\n}\n\nconst getDateTime = value => {\n  if (value === undefined) {\n    return \"\";\n  } else {\n    const timestamp = new Date(value === undefined ? new Date() : value * 1000); // return timestamp.toLocaleString();\n\n    return timestamp.toLocaleDateString();\n  }\n};\n\nconst DashChart = props => {\n  _s();\n\n  // static jsfiddleUrl = 'https://jsfiddle.net/alidingling/Lrffmzfc/';\n  // const width = \n  const dataProvider = useDataProvider();\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  const [total, setTotal] = useState();\n  useEffect(() => {\n    dataProvider('GET_LIST', 'notifications', {\n      filter: {\n        report_timestamp: {\n          \"$lte\": getTimestampFirstDayInThisMonth()\n        }\n      },\n      sort: {\n        field: 'report_timestamp',\n        order: 'ASC'\n      },\n      pagination: {}\n    }) // dataProvider.getList('notifications', { sort: {report_timestamp:'ASC'}, filter: {} })\n    .then(({\n      data,\n      total\n    }) => {\n      setData(data);\n      setTotal(total);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  var chartData = [];\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 23\n  }, this);\n  console.log(\"getTimestampFirstDayInThisMonth:\" + getTimestampFirstDayInThisMonth()); // 1604220891\n  // 1604220870\n\n  var preDate = \"\";\n  data.map(async answer => {\n    if (!data || data.length === 0) {\n      return;\n    }\n\n    console.log(answer.report_timestamp);\n    const selDate = getDateTime(answer.report_timestamp);\n\n    if (preDate === \"\") {\n      chartData[chartData.length] = {\n        name: selDate,\n        Notifications: 1\n      };\n      preDate = selDate;\n    } else if (preDate === selDate) {\n      chartData[chartData.length - 1].Notifications += 1;\n    } else {\n      chartData[chartData.length] = {\n        name: selDate,\n        Notifications: 1\n      };\n      preDate = selDate;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    height: 250,\n    width: \"99%\",\n    children: /*#__PURE__*/_jsxDEV(AreaChart, {\n      width: 500,\n      height: 400,\n      data: chartData,\n      margin: {\n        top: 10,\n        right: 30,\n        left: 0,\n        bottom: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"Notifications\",\n        stroke: \"#8884d8\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n  {\n    /* downloadImage.bind(this, element)  */\n  }\n};\n\n_s(DashChart, \"ZUEUGuFvngPJ1Z0x+v84onWyLhI=\", false, function () {\n  return [useDataProvider];\n});\n\n_c = DashChart;\nexport default DashChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashChart\");","map":{"version":3,"sources":["/Users/rapunzel/Documents/tb-admin 2/src/components/DashChart.js"],"names":["React","useState","useEffect","useDataProvider","Loading","Error","Button","ResponsiveContainer","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","getTimestampFirstDayInThisMonth","date","Date","setDate","Math","round","Number","valueOf","getDateTime","value","undefined","timestamp","toLocaleDateString","DashChart","props","dataProvider","data","setData","loading","setLoading","error","setError","total","setTotal","filter","report_timestamp","sort","field","order","pagination","then","catch","chartData","console","log","preDate","map","answer","length","selDate","name","Notifications","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDataProvider, Loading, Error, Button} from 'react-admin';\nimport {\n    ResponsiveContainer, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip,\n} from 'recharts';\n\n// const data = [\n//     {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\n//     {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\n//     {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\n//     {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\n//     {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\n//     {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\n//     {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\n// ];\n\nfunction getTimestampFirstDayInThisMonth() {\n    var date = new Date();\n    date.setDate(1);\n\n    return Math.round(Number(date.valueOf() / 1000));\n}\n\nconst getDateTime = value => {\n    if (value === undefined) {\n        return \"\";\n    } else {\n        const timestamp = new Date(value === undefined ? new Date() : value * 1000);\n        // return timestamp.toLocaleString();\n        return timestamp.toLocaleDateString();\n    }\n    \n};\n\nconst DashChart = (props) => {\n    // static jsfiddleUrl = 'https://jsfiddle.net/alidingling/Lrffmzfc/';\n    // const width = \n\n    const dataProvider = useDataProvider();\n    const [data, setData] = useState();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n    const [total, setTotal] = useState();\n\n\n    useEffect(() => {\n\n        dataProvider('GET_LIST', 'notifications', {\n            filter: { report_timestamp: { \"$lte\": getTimestampFirstDayInThisMonth()}},\n            sort: { field: 'report_timestamp', order: 'ASC' },\n            pagination: {},\n        })\n        // dataProvider.getList('notifications', { sort: {report_timestamp:'ASC'}, filter: {} })\n            .then(({ data, total }) => {\n                setData(data); \n                setTotal(total);                \n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            })\n    }, []);\n\n    var chartData = [];\n\n    if (loading) return <Loading />;\n    if (error) return <Error />;\n    \n    console.log(\"getTimestampFirstDayInThisMonth:\" + getTimestampFirstDayInThisMonth());\n\n    // 1604220891\n    // 1604220870\n    var preDate = \"\"\n    data.map(async answer => {\n        if (!data || data.length === 0) {\n            return;\n        }\n\n        console.log(answer.report_timestamp);\n\n        const selDate = getDateTime(answer.report_timestamp);\n\n        if (preDate === \"\" ) {\n            chartData[chartData.length] = {\n                name: selDate,\n                Notifications  : 1\n            };\n            preDate = selDate;\n        } else if (preDate === selDate) {\n            chartData[chartData.length - 1].Notifications += 1;\n        } else {\n            chartData[chartData.length] = {\n                name: selDate,\n                Notifications  : 1\n            };\n            preDate = selDate;\n        }\n    });\n\n    return (\n        <ResponsiveContainer height={250} width='99%'>\n            <AreaChart width={500} height={400} data={chartData} margin={{ top: 10, right: 30, left: 0, bottom: 0,}}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"Notifications\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n            </AreaChart>\n        </ResponsiveContainer>  \n        \n    );\n\n\n            {/* downloadImage.bind(this, element)  */}\n}\n\nexport default DashChart;"]},"metadata":{},"sourceType":"module"}