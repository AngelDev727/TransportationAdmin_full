{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/MyDATA/Mega_data/Project/2020-11/08-TransportationAdmin/tb-admin 2/src/models/SimpleMenu.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { DashChart } from '../components';\nimport { Card, CardContent, CardHeader, Button, MenuItem, Menu } from '@material-ui/core';\nconst options = ['Profile', 'My account', 'Logout', 'Hide content'];\n\nfunction getDateByKey(value) {\n  var date = new Date();\n  var year = date.getFullYear();\n  var month = (1 + date.getMonth()).toString();\n  month = month.length > 1 ? month : '0' + month;\n  if (value === \"month\") return month + \"/\" + year;else return year;\n}\n\nexport default function SimpleMenu() {\n  _s();\n\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n  };\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Welcome to the Admin panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [\"Notifications per day this month:\", /*#__PURE__*/_jsxDEV(Button\n      /*aria-controls=\"simple-menu\"*/\n      , {\n        \"aria-haspopup\": \"true\",\n        style: {\n          fontSize: 16\n        },\n        onClick: handleClick,\n        children: [getDateByKey(\"month\"), \" | \", options[selectedIndex]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        id: \"lock-menu\",\n        anchorEl: anchorEl,\n        keepMounted: true,\n        open: Boolean(anchorEl),\n        onClose: handleClose,\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          /*disabled={index === 0}*/\n          selected: index === selectedIndex,\n          onClick: event => handleMenuItemClick(event, index),\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DashChart, {\n      datetype: \"month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [\"Notifications per day this year:\", /*#__PURE__*/_jsxDEV(Button, {\n        label: \"123\",\n        style: {\n          fontSize: 18\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DashChart, {\n      datetype: \"year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SimpleMenu, \"hgw0pLRirA89D5gwlOYDXc1QWGM=\");\n\n_c = SimpleMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleMenu\");","map":{"version":3,"sources":["/Volumes/MyDATA/Mega_data/Project/2020-11/08-TransportationAdmin/tb-admin 2/src/models/SimpleMenu.js"],"names":["React","DashChart","Card","CardContent","CardHeader","Button","MenuItem","Menu","options","getDateByKey","value","date","Date","year","getFullYear","month","getMonth","toString","length","SimpleMenu","selectedIndex","setSelectedIndex","useState","anchorEl","setAnchorEl","handleMenuItemClick","event","index","handleClick","currentTarget","handleClose","fontSize","Boolean","map","option"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {DashChart} from '../components'\n\nimport { Card, CardContent, CardHeader, Button, MenuItem, Menu} from '@material-ui/core';\n\n\n\nconst options = [\n    'Profile',\n    'My account',\n    'Logout',\n    'Hide content',\n];\n\nfunction getDateByKey(value) {\n    var date = new Date();\n    var year = date.getFullYear();\n    var month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : '0' + month;\n\n    if (value === \"month\")\n        return month + \"/\" + year;\n    else \n        return year;\n}\n\nexport default function SimpleMenu() {\n\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const handleMenuItemClick = (event, index) => {\n        setSelectedIndex(index);\n        setAnchorEl(null);\n    };\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <Card>\n\n            <CardHeader title=\"Welcome to the Admin panel\" />\n            <CardContent>Notifications per day this month:\n            <Button /*aria-controls=\"simple-menu\"*/  aria-haspopup=\"true\" style={{ fontSize: 16 }}  onClick={handleClick}>\n                {getDateByKey(\"month\")} | {options[selectedIndex]} \n            </Button>\n\n            <Menu id=\"lock-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n                {options.map((option, index) => (\n                <MenuItem key={option} /*disabled={index === 0}*/ selected={index === selectedIndex} onClick={(event) => handleMenuItemClick(event, index)}>\n                    {option}\n                </MenuItem>\n                ))}\n            </Menu>\n            \n            </CardContent>\n            <DashChart datetype=\"month\" />\n\n\n            <CardContent>Notifications per day this year:<Button label=\"123\" style={{ fontSize: 18 }} /></CardContent>\n            <DashChart datetype=\"year\"/>\n\n        </Card>\n    );\n}"]},"metadata":{},"sourceType":"module"}