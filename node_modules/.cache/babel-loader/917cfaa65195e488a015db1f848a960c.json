{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rapunzel/Documents/tb-admin/src/components/DeleteButtonWithConfirmation.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Accordion } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport ActionDelete from '@material-ui/icons/Delete';\nimport classnames from 'classnames';\nimport { translate, crudDelete, startUndoable } from 'ra-core';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { SimpleForm, Button, DeleteButton, TextInput, LongTextInput, required } from 'react-admin';\n\nconst styles = theme => ({\n  deleteButton: {\n    color: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: fade(theme.palette.error.main, 0.12),\n      // Reset on mouse devices\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  }\n});\n\nclass DeleteButtonWithConfirmation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showDialog: false\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        showDialog: true\n      });\n    };\n\n    this.handleCloseClick = () => {\n      this.setState({\n        showDialog: false\n      });\n    };\n\n    this.handleDelete = event => {\n      event.preventDefault();\n      this.setState({\n        showDialog: false\n      });\n      const {\n        dispatchCrudDelete,\n        startUndoable,\n        resource,\n        record,\n        basePath,\n        redirect,\n        undoable\n      } = this.props;\n\n      if (undoable) {\n        startUndoable(crudDelete(resource, record.id, record, basePath, redirect));\n      } else {\n        dispatchCrudDelete(resource, record.id, record, basePath, redirect);\n      }\n    };\n  }\n\n  render() {\n    const {\n      showDialog\n    } = this.state;\n    const {\n      label = 'ra.action.delete',\n      classes = {},\n      className\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handleClick,\n        label: label,\n        className: classnames('ra-delete-button', classes.deleteButton, className),\n        children: /*#__PURE__*/_jsxDEV(ActionDelete, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, \"button\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        fullWidth: true,\n        open: showDialog,\n        onClose: this.handleCloseClick,\n        \"aria-label\": \"Are you sure?\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Are you sure you want to delete this entity?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Your actions will be logged.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleDelete,\n            label: label,\n            className: classnames('ra-delete-button', classes.deleteButton, className),\n            children: /*#__PURE__*/_jsxDEV(ActionDelete, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, \"button\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"ra.action.cancel\",\n            onClick: this.handleCloseClick,\n            children: /*#__PURE__*/_jsxDEV(IconCancel, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nDeleteButtonWithConfirmation.propTypes = {\n  basePath: PropTypes.string,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  dispatchCrudDelete: PropTypes.func.isRequired,\n  label: PropTypes.string,\n  record: PropTypes.object,\n  redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  resource: PropTypes.string.isRequired,\n  startUndoable: PropTypes.func,\n  translate: PropTypes.func,\n  undoable: PropTypes.bool\n};\nDeleteButtonWithConfirmation.defaultProps = {\n  redirect: 'list',\n  undoable: true\n};\nexport default compose(connect(null, {\n  startUndoable,\n  dispatchCrudDelete: crudDelete\n}), translate, withStyles(styles))(DeleteButtonWithConfirmation);","map":{"version":3,"sources":["/Users/rapunzel/Documents/tb-admin/src/components/DeleteButtonWithConfirmation.js"],"names":["React","Component","Fragment","PropTypes","connect","compose","withStyles","Accordion","fade","ActionDelete","classnames","translate","crudDelete","startUndoable","IconCancel","Dialog","DialogTitle","DialogContent","DialogActions","SimpleForm","Button","DeleteButton","TextInput","LongTextInput","required","styles","theme","deleteButton","color","palette","error","main","backgroundColor","DeleteButtonWithConfirmation","state","showDialog","handleClick","setState","handleCloseClick","handleDelete","event","preventDefault","dispatchCrudDelete","resource","record","basePath","redirect","undoable","props","id","render","label","classes","className","propTypes","string","object","func","isRequired","oneOfType","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Accordion } from '@material-ui/core'\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport ActionDelete from '@material-ui/icons/Delete';\nimport classnames from 'classnames';\nimport { translate, crudDelete, startUndoable } from 'ra-core';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { SimpleForm, Button, DeleteButton, TextInput, LongTextInput, required } from 'react-admin';\n\nconst styles = (theme) => ({\n    deleteButton: {\n        color: theme.palette.error.main,\n        '&:hover': {\n            backgroundColor: fade(theme.palette.error.main, 0.12),\n            // Reset on mouse devices\n            '@media (hover: none)': {\n                backgroundColor: 'transparent'\n            }\n        }\n    }\n});\n\nclass DeleteButtonWithConfirmation extends Component {\n  state = {\n    showDialog: false\n  };\n\n  handleClick = () => {\n    this.setState({ showDialog: true });\n  };\n\n  handleCloseClick = () => {\n    this.setState({ showDialog: false });\n  };\n  \n  handleDelete = (event) => {\n    event.preventDefault();\n    this.setState({ showDialog: false });\n    const { dispatchCrudDelete, startUndoable, resource, record, basePath, redirect, undoable } = this.props;\n    if (undoable) {\n      startUndoable(crudDelete(resource, record.id, record, basePath, redirect));\n    } else {\n      dispatchCrudDelete(resource, record.id, record, basePath, redirect);\n    }\n  };\n\n  render() {\n    const { showDialog } = this.state;\n    const { label = 'ra.action.delete', classes = {}, className } = this.props;\n    return (\n      <Fragment>\n        <Button onClick={this.handleClick} label={label} className={classnames('ra-delete-button', classes.deleteButton, className)} key=\"button\">\n          <ActionDelete />\n        </Button>\n        <Dialog fullWidth open={showDialog} onClose={this.handleCloseClick} aria-label=\"Are you sure?\">\n          <DialogTitle>Are you sure you want to delete this entity?</DialogTitle>\n          <DialogContent>\n            <div>\n              Your actions will be logged.\n            </div>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleDelete} label={label} className={classnames('ra-delete-button', classes.deleteButton, className)} key=\"button\">\n              <ActionDelete />\n            </Button>\n            <Button label=\"ra.action.cancel\" onClick={this.handleCloseClick}>\n              <IconCancel />\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nDeleteButtonWithConfirmation.propTypes = {\n    basePath: PropTypes.string,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    dispatchCrudDelete: PropTypes.func.isRequired,\n    label: PropTypes.string,\n    record: PropTypes.object,\n    redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n    resource: PropTypes.string.isRequired,\n    startUndoable: PropTypes.func,\n    translate: PropTypes.func,\n    undoable: PropTypes.bool\n};\n\nDeleteButtonWithConfirmation.defaultProps = {\n    redirect: 'list',\n    undoable: true\n};\n\nexport default compose(\n    connect(\n        null,\n        { startUndoable, dispatchCrudDelete: crudDelete }\n    ),\n    translate,\n    withStyles(styles)\n)(DeleteButtonWithConfirmation);"]},"metadata":{},"sourceType":"module"}