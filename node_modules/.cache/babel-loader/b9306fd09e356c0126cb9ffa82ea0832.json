{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/MyDATA/Mega_data/Project/2020/2020-11/08-TransportationAdmin/tb-admin_full/src/models/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\"; // import { Button } from \"react-admin\";\n\nimport { DashChart } from '../components';\nimport { Card, CardContent, CardHeader, Button, MenuItem, Menu } from '@material-ui/core'; // function getDateByKey(value) {\n//     var date = new Date();\n//     var year = date.getFullYear();\n//     var month = (1 + date.getMonth()).toString();\n//     month = month.length > 1 ? month : '0' + month;\n//     if (value === \"monthly\")\n//         return month + \"/\" + year;\n//     else \n//         return year;\n// }\n\nfunction getOptions(value) {\n  var result = [];\n  var date = new Date();\n  var year = date.getFullYear();\n\n  if (value === \"monthly\") {\n    for (let index = date.getMonth(); index >= 0; index--) {\n      var month = index + 1;\n      month = month > 9 ? month : '0' + month;\n      result[result.length] = month + \"/\" + year;\n    }\n  } else {\n    for (let index = year; index >= year - 3; index--) {\n      result[result.length] = index;\n    }\n  }\n\n  return result;\n}\n\nconst optionsMonth = getOptions(\"monthly\");\nconst optionsYear = getOptions(\"yearly\");\nexport default function Dashboard() {\n  _s();\n\n  const [selectedMonth, setSelectedMonth] = React.useState(0);\n  const [selectedYear, setSelectedYear] = React.useState(0);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [anchorElYear, setAnchorElYear] = React.useState(null);\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedMonth(index);\n    setAnchorEl(null);\n  };\n\n  const handleYearMenuItemClick = (event, index) => {\n    setSelectedYear(index);\n    setAnchorElYear(null);\n  };\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleYearClick = event => {\n    setAnchorElYear(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setAnchorElYear(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"asdf\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Welcome to the Admin panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [\"Notifications per day this month:\", /*#__PURE__*/_jsxDEV(Button, {\n        \"aria-controls\": \"simple-menu\",\n        color: \"primary\",\n        \"aria-haspopup\": \"true\",\n        style: {\n          fontSize: 16\n        },\n        onClick: handleClick,\n        children: optionsMonth[selectedMonth]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        id: \"lock-menu\",\n        anchorEl: anchorEl,\n        keepMounted: true,\n        open: Boolean(anchorEl),\n        onClose: handleClose,\n        children: optionsMonth.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          /*disabled={index === 0}*/\n          selected: index === selectedMonth,\n          onClick: event => handleMenuItemClick(event, index),\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DashChart, {\n      datetype: \"month\",\n      selectedValue: optionsMonth[selectedMonth]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [\"Notifications per day this year:\", /*#__PURE__*/_jsxDEV(Button, {\n        \"aria-controls\": \"simple-menu\",\n        color: \"primary\",\n        \"aria-haspopup\": \"true\",\n        style: {\n          fontSize: 16\n        },\n        onClick: handleYearClick,\n        children: optionsYear[selectedYear]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        id: \"lock-menu\",\n        anchorEl: anchorElYear,\n        keepMounted: true,\n        open: Boolean(anchorElYear),\n        onClose: handleClose,\n        children: optionsYear.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          /*disabled={index === 0}*/\n          selected: index === selectedYear,\n          onClick: event => handleYearMenuItemClick(event, index),\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DashChart, {\n      datetype: \"year\",\n      selectedValue: optionsYear[selectedYear]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"zkD9BrH+bVXzfgDZRUUW4QOFuGM=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Volumes/MyDATA/Mega_data/Project/2020/2020-11/08-TransportationAdmin/tb-admin_full/src/models/Dashboard.js"],"names":["React","DashChart","Card","CardContent","CardHeader","Button","MenuItem","Menu","getOptions","value","result","date","Date","year","getFullYear","index","getMonth","month","length","optionsMonth","optionsYear","Dashboard","selectedMonth","setSelectedMonth","useState","selectedYear","setSelectedYear","anchorEl","setAnchorEl","anchorElYear","setAnchorElYear","handleMenuItemClick","event","handleYearMenuItemClick","handleClick","currentTarget","handleYearClick","handleClose","fontSize","Boolean","map","option"],"mappings":"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","sourcesContent":["import * as React from \"react\";\n// import { Button } from \"react-admin\";\nimport { DashChart} from '../components'\nimport { \n    Card, CardContent, CardHeader,\n    Button,\n    MenuItem, Menu\n} from '@material-ui/core';\n\n// function getDateByKey(value) {\n//     var date = new Date();\n//     var year = date.getFullYear();\n//     var month = (1 + date.getMonth()).toString();\n//     month = month.length > 1 ? month : '0' + month;\n\n//     if (value === \"monthly\")\n//         return month + \"/\" + year;\n//     else \n//         return year;\n// }\n\nfunction getOptions(value) {\n    \n    var result = [];\n    var date = new Date();\n    var year = date.getFullYear();\n\n    if (value  === \"monthly\") {\n        for (let index = date.getMonth(); index >= 0; index--) {\n            var month = index + 1;\n            month = month > 9 ? month : '0' + month;\n            result[result.length] = month + \"/\" + year;\n        }\n    } else {\n        for (let index = year; index >= year - 3; index--) {\n            result[result.length] = index;\n        }\n    }\n    \n    return result;\n}\n\nconst optionsMonth = getOptions(\"monthly\");\nconst optionsYear = getOptions(\"yearly\");\n\nexport default function Dashboard() {\n    const [selectedMonth, setSelectedMonth] = React.useState(0);\n    const [selectedYear, setSelectedYear] = React.useState(0);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [anchorElYear, setAnchorElYear] = React.useState(null);\n\n    const handleMenuItemClick = (event, index) => {\n        setSelectedMonth(index);\n        setAnchorEl(null);\n    };\n\n    const handleYearMenuItemClick = (event, index) => {\n        setSelectedYear(index);\n        setAnchorElYear(null);\n    };\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleYearClick = (event) => {\n        setAnchorElYear(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        setAnchorElYear(null);\n    };\n\n    return (\n        <Card title=\"asdf\">\n            <CardHeader title=\"Welcome to the Admin panel\" />\n            <CardContent>Notifications per day this month:\n                {/* <Button label={getDateByKey(\"monthly\")} style={{ fontSize: 18 }}/> */}\n                <Button aria-controls=\"simple-menu\"  color=\"primary\" aria-haspopup=\"true\" style={{ fontSize: 16 }}  onClick={handleClick}>\n                    {optionsMonth[selectedMonth]} \n                </Button>\n\n                <Menu id=\"lock-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n                    {optionsMonth.map((option, index) => (\n                    <MenuItem key={option} /*disabled={index === 0}*/ selected={index === selectedMonth} onClick={(event) => handleMenuItemClick(event, index)}>\n                        {option}\n                    </MenuItem>\n                    ))}\n                </Menu>\n            </CardContent>\n    \n            <DashChart datetype=\"month\" selectedValue={optionsMonth[selectedMonth]} />\n            \n            <br />\n            <CardContent>Notifications per day this year:\n                {/* <Button label={getDateByKey(\"yearly\")} style={{ fontSize: 18 }} /> */}\n                <Button aria-controls=\"simple-menu\"  color=\"primary\" aria-haspopup=\"true\" style={{ fontSize: 16 }}  onClick={handleYearClick}>\n                    {optionsYear[selectedYear]} \n                </Button>\n\n                <Menu id=\"lock-menu\" anchorEl={anchorElYear} keepMounted open={Boolean(anchorElYear)} onClose={handleClose}>\n                    {optionsYear.map((option, index) => (\n                        <MenuItem key={option} /*disabled={index === 0}*/ selected={index === selectedYear} onClick={(event) => handleYearMenuItemClick(event, index)}>\n                            {option}\n                        </MenuItem>\n                    ))}\n                </Menu>\n            \n            </CardContent>\n            <DashChart datetype=\"year\" selectedValue={optionsYear[selectedYear]}/>\n\n        </Card>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}