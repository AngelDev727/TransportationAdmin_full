{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rapunzel/Documents/tb-admin/src/components/DateTimeField.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst getDateTime = value => {\n  console.log(value);\n  const timestamp = new Date(value === \"\" ? new Date() : value * 1000);\n  return timestamp.toLocaleString();\n};\n\nconst DateTimeField = ({\n  source,\n  record = {}\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: getDateTime(record[source])\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 52\n}, this);\n\n_c = DateTimeField;\nDateTimeField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired\n};\nexport default DateTimeField;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateTimeField\");","map":{"version":3,"sources":["/Users/rapunzel/Documents/tb-admin/src/components/DateTimeField.js"],"names":["React","PropTypes","getDateTime","value","console","log","timestamp","Date","toLocaleString","DateTimeField","source","record","propTypes","label","string","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,SAAS,GAAG,IAAIC,IAAJ,CAASJ,KAAK,KAAK,EAAV,GAAe,IAAII,IAAJ,EAAf,GAA4BJ,KAAK,GAAG,IAA7C,CAAlB;AACA,SAAOG,SAAS,CAACE,cAAV,EAAP;AACH,CAJD;;AAKA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAM,GAAG;AAAnB,CAAD,kBAA6B;AAAA,YAAOT,WAAW,CAACS,MAAM,CAACD,MAAD,CAAP;AAAlB;AAAA;AAAA;AAAA;AAAA,QAAnD;;KAAMD,a;AAENA,aAAa,CAACG,SAAd,GAA0B;AACtBC,EAAAA,KAAK,EAAEZ,SAAS,CAACa,MADK;AAEtBH,EAAAA,MAAM,EAAEV,SAAS,CAACc,MAFI;AAGtBL,EAAAA,MAAM,EAAET,SAAS,CAACa,MAAV,CAAiBE;AAHH,CAA1B;AAMA,eAAeP,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst getDateTime = value => {\n    console.log(value);\n    const timestamp = new Date(value === \"\" ? new Date() : value * 1000);\n    return timestamp.toLocaleString();\n};\nconst DateTimeField = ({ source, record = {} }) => <span>{getDateTime(record[source])}</span>;\n\nDateTimeField.propTypes = {\n    label: PropTypes.string,\n    record: PropTypes.object,\n    source: PropTypes.string.isRequired,\n};\n\nexport default DateTimeField;"]},"metadata":{},"sourceType":"module"}