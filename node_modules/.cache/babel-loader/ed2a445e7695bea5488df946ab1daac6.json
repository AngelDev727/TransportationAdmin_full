{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rapunzel/Documents/tb-admin 2/src/components/DashChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport { useDataProvider, Loading, Error } from 'react-admin'; // const data = [\n//     {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\n//     {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\n//     {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\n//     {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\n//     {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\n//     {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\n//     {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\n// ];\n\nconst DashChart = () => {\n  _s();\n\n  // static jsfiddleUrl = 'https://jsfiddle.net/alidingling/Lrffmzfc/';\n  // const width = \n  const dataProvider = useDataProvider();\n  const [total, setTotal] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    dataProvider.getList('comments', {\n      pagination: {\n        page: 1,\n        perPage: 100000\n      },\n      sort: {},\n      filter: {\n        voice_doc_id: record.id\n      }\n    }).then(({\n      data,\n      total\n    }) => {\n      setTotal(total);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  var chartData = [];\n  console.log(data);\n  data.array.forEach(element => {});\n  return /*#__PURE__*/_jsxDEV(AreaChart, {\n    width: 500,\n    height: 400,\n    data: chartData,\n    margin: {\n      top: 10,\n      right: 30,\n      left: 0,\n      bottom: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Area, {\n      type: \"monotone\",\n      dataKey: \"amt\",\n      stroke: \"#8884d8\",\n      fill: \"#8884d8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DashChart, \"/Xwy0mQnGbY+xUrzCpYyYjkeK0E=\", false, function () {\n  return [useDataProvider];\n});\n\n_c = DashChart;\nexport default DashChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashChart\");","map":{"version":3,"sources":["/Users/rapunzel/Documents/tb-admin 2/src/components/DashChart.js"],"names":["React","useState","useEffect","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","useDataProvider","Loading","Error","DashChart","dataProvider","total","setTotal","loading","setLoading","error","setError","getList","pagination","page","perPage","sort","filter","voice_doc_id","record","id","then","data","catch","chartData","console","log","array","forEach","element","top","right","left","bottom"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,SADF,EACaC,IADb,EACmBC,KADnB,EAC0BC,KAD1B,EACiCC,aADjC,EACgDC,OADhD,QAEO,UAFP;AAGA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,KAAnC,QAAgD,aAAhD,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB;AACA;AAEA,QAAMC,YAAY,GAAGJ,eAAe,EAApC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiC;AAAEC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAYC,QAAAA,OAAO,EAAE;AAArB,OAAd;AAA6CC,MAAAA,IAAI,EAAE,EAAnD;AAAuDC,MAAAA,MAAM,EAAE;AAACC,QAAAA,YAAY,EAAEC,MAAM,CAACC;AAAtB;AAA/D,KAAjC,EACKC,IADL,CACU,CAAC;AAAEC,MAAAA,IAAF;AAAQhB,MAAAA;AAAR,KAAD,KAAqB;AACvBC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJL,EAKKc,KALL,CAKWb,KAAK,IAAI;AACZC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KARL;AASH,GAVQ,EAUN,EAVM,CAAT;AAYA,MAAIe,SAAS,GAAG,EAAhB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAA,EAAAA,IAAI,CAACK,KAAL,CAAWC,OAAX,CAAmBC,OAAO,IAAI,CAE7B,CAFD;AAIA,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,EAAE,GAAlB;AAAuB,IAAA,MAAM,EAAE,GAA/B;AAAoC,IAAA,IAAI,EAAEL,SAA1C;AAAqD,IAAA,MAAM,EAAE;AAAEM,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,KAAK,EAAE,EAAlB;AAAsBC,MAAAA,IAAI,EAAE,CAA5B;AAA+BC,MAAAA,MAAM,EAAE;AAAvC,KAA7D;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,KAA9B;AAAoC,MAAA,MAAM,EAAC,SAA3C;AAAqD,MAAA,IAAI,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CArCD;;GAAM7B,S;UAImBH,e;;;KAJnBG,S;AAuCN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip,\n} from 'recharts';\nimport { useDataProvider, Loading, Error } from 'react-admin';\n\n// const data = [\n//     {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\n//     {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\n//     {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\n//     {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\n//     {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\n//     {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\n//     {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\n// ];\n\nconst DashChart = () => {\n    // static jsfiddleUrl = 'https://jsfiddle.net/alidingling/Lrffmzfc/';\n    // const width = \n\n    const dataProvider = useDataProvider();\n    const [total, setTotal] = useState();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        dataProvider.getList('comments', { pagination: { page: 1 , perPage: 100000 }, sort: {}, filter: {voice_doc_id: record.id} })\n            .then(({ data, total }) => {\n                setTotal(total);                \n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            })\n    }, []);\n\n    var chartData = [];\n\n    console.log(data);\n    data.array.forEach(element => {\n        \n    });\n\n    return (\n        <AreaChart width={500} height={400} data={chartData} margin={{ top: 10, right: 30, left: 0, bottom: 0,}}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Area type=\"monotone\" dataKey=\"amt\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n        </AreaChart>\n    );\n}\n\nexport default DashChart;"]},"metadata":{},"sourceType":"module"}