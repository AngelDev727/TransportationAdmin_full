{"ast":null,"code":"import _objectSpread from\"/Users/rapunzel/Documents/tb-admin 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import*as React from\"react\";import{List,Datagrid,TextField,ReferenceField,EditButton,Filter,ReferenceInput,SelectInput,TextInput,SimpleForm,Edit,Create,SimpleList}from'react-admin';import{useMediaQuery}from'@material-ui/core';export var PostFilter=function PostFilter(props){return/*#__PURE__*/_jsxs(Filter,_objectSpread(_objectSpread({},props),{},{children:[/*#__PURE__*/_jsx(TextInput,{label:\"Search\",source:\"q\",alwaysOn:true}),/*#__PURE__*/_jsx(ReferenceInput,{label:\"User\",source:\"userId\",reference:\"users\",allowEmpty:true,children:/*#__PURE__*/_jsx(SelectInput,{optionText:\"name\"})})]}));};export var PostList=function PostList(props){var isSmall=useMediaQuery(function(theme){return theme.breakpoints.down('sm');});return/*#__PURE__*/_jsx(List,_objectSpread(_objectSpread({filters:/*#__PURE__*/_jsx(PostFilter,{})},props),{},{children:isSmall?/*#__PURE__*/_jsx(SimpleList,{primaryText:function primaryText(record){return record.title;},secondaryText:function secondaryText(record){return\"\".concat(record.views,\" views\");},tertiaryText:function tertiaryText(record){return new Date(record.published_at).toLocaleDateString();}}):/*#__PURE__*/_jsxs(Datagrid,{children:[/*#__PURE__*/_jsx(TextField,{source:\"id\"}),/*#__PURE__*/_jsx(ReferenceField,{source:\"userId\",reference:\"users\",children:/*#__PURE__*/_jsx(TextField,{source:\"name\"})}),/*#__PURE__*/_jsx(TextField,{source:\"title\"}),/*#__PURE__*/_jsx(TextField,{source:\"body\"}),/*#__PURE__*/_jsx(EditButton,{})]})}));};var PostTitle=function PostTitle(_ref){var record=_ref.record;return/*#__PURE__*/_jsxs(\"span\",{children:[\"Post \",record?\"\\\"\".concat(record.title,\"\\\"\"):'']});};export var PostEdit=function PostEdit(props){return/*#__PURE__*/_jsx(Edit,_objectSpread(_objectSpread({title:/*#__PURE__*/_jsx(PostTitle,{})},props),{},{children:/*#__PURE__*/_jsxs(SimpleForm,{children:[/*#__PURE__*/_jsx(TextInput,{disabled:true,source:\"id\"}),/*#__PURE__*/_jsx(ReferenceInput,{source:\"userId\",reference:\"users\",children:/*#__PURE__*/_jsx(SelectInput,{optionText:\"name\"})}),/*#__PURE__*/_jsx(TextInput,{source:\"title\"}),/*#__PURE__*/_jsx(TextInput,{multiline:true,source:\"body\"})]})}));};export var PostCreate=function PostCreate(props){return/*#__PURE__*/_jsx(Create,_objectSpread(_objectSpread({},props),{},{children:/*#__PURE__*/_jsxs(SimpleForm,{children:[/*#__PURE__*/_jsx(ReferenceInput,{source:\"userId\",reference:\"users\",children:/*#__PURE__*/_jsx(SelectInput,{optionText:\"name\"})}),/*#__PURE__*/_jsx(TextInput,{source:\"title\"}),/*#__PURE__*/_jsx(TextInput,{multiline:true,source:\"body\"})]})}));};","map":{"version":3,"sources":["/Users/rapunzel/Documents/tb-admin 2/src/models/Posts.js"],"names":["React","List","Datagrid","TextField","ReferenceField","EditButton","Filter","ReferenceInput","SelectInput","TextInput","SimpleForm","Edit","Create","SimpleList","useMediaQuery","PostFilter","props","PostList","isSmall","theme","breakpoints","down","record","title","views","Date","published_at","toLocaleDateString","PostTitle","PostEdit","PostCreate"],"mappings":"kPAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OACIC,IADJ,CACUC,QADV,CACoBC,SADpB,CAC+BC,cAD/B,CAC+CC,UAD/C,CAEIC,MAFJ,CAEYC,cAFZ,CAE4BC,WAF5B,CAEyCC,SAFzC,CAEoDC,UAFpD,CAEgEC,IAFhE,CAEsEC,MAFtE,CAE8EC,UAF9E,KAEgG,aAFhG,CAGA,OAASC,aAAT,KAA8B,mBAA9B,CAGA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,qBACtB,MAAC,MAAD,gCAAYA,KAAZ,6BACI,KAAC,SAAD,EAAW,KAAK,CAAC,QAAjB,CAA0B,MAAM,CAAC,GAAjC,CAAqC,QAAQ,KAA7C,EADJ,cAEI,KAAC,cAAD,EAAgB,KAAK,CAAC,MAAtB,CAA6B,MAAM,CAAC,QAApC,CAA6C,SAAS,CAAC,OAAvD,CAA+D,UAAU,KAAzE,uBACI,KAAC,WAAD,EAAa,UAAU,CAAC,MAAxB,EADJ,EAFJ,IADsB,EAAnB,CASP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACD,KAAD,CAAW,CAC/B,GAAME,CAAAA,OAAO,CAAGJ,aAAa,CAAC,SAAAK,KAAK,QAAIA,CAAAA,KAAK,CAACC,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAJ,EAAN,CAA7B,CAEA,mBACI,KAAC,IAAD,8BAAM,OAAO,cAAE,KAAC,UAAD,IAAf,EAAmCL,KAAnC,eACKE,OAAO,cACJ,KAAC,UAAD,EACI,WAAW,CAAE,qBAAAI,MAAM,QAAIA,CAAAA,MAAM,CAACC,KAAX,EADvB,CAEI,aAAa,CAAE,uBAAAD,MAAM,kBAAOA,MAAM,CAACE,KAAd,YAFzB,CAGI,YAAY,CAAE,sBAAAF,MAAM,QAAI,IAAIG,CAAAA,IAAJ,CAASH,MAAM,CAACI,YAAhB,EAA8BC,kBAA9B,EAAJ,EAHxB,EADI,cAOJ,MAAC,QAAD,yBACI,KAAC,SAAD,EAAW,MAAM,CAAC,IAAlB,EADJ,cAEI,KAAC,cAAD,EAAgB,MAAM,CAAC,QAAvB,CAAgC,SAAS,CAAC,OAA1C,uBACI,KAAC,SAAD,EAAW,MAAM,CAAC,MAAlB,EADJ,EAFJ,cAKI,KAAC,SAAD,EAAW,MAAM,CAAC,OAAlB,EALJ,cAMI,KAAC,SAAD,EAAW,MAAM,CAAC,MAAlB,EANJ,cAOI,KAAC,UAAD,IAPJ,GARR,GADJ,CAqBH,CAxBM,CA0BP,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAgB,IAAbN,CAAAA,MAAa,MAAbA,MAAa,CAC9B,mBAAO,gCAAYA,MAAM,aAAOA,MAAM,CAACC,KAAd,OAAyB,EAA3C,GAAP,CACH,CAFD,CAIA,MAAO,IAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAb,KAAK,qBACzB,KAAC,IAAD,8BAAM,KAAK,cAAE,KAAC,SAAD,IAAb,EAAgCA,KAAhC,4BACI,MAAC,UAAD,yBACI,KAAC,SAAD,EAAW,QAAQ,KAAnB,CAAoB,MAAM,CAAC,IAA3B,EADJ,cAEI,KAAC,cAAD,EAAgB,MAAM,CAAC,QAAvB,CAAgC,SAAS,CAAC,OAA1C,uBAEI,KAAC,WAAD,EAAa,UAAU,CAAC,MAAxB,EAFJ,EAFJ,cAOI,KAAC,SAAD,EAAW,MAAM,CAAC,OAAlB,EAPJ,cASI,KAAC,SAAD,EAAW,SAAS,KAApB,CAAqB,MAAM,CAAC,MAA5B,EATJ,GADJ,GADyB,EAAtB,CAgBP,MAAO,IAAMc,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAd,KAAK,qBAC3B,KAAC,MAAD,gCAAYA,KAAZ,4BACI,MAAC,UAAD,yBACI,KAAC,cAAD,EAAgB,MAAM,CAAC,QAAvB,CAAgC,SAAS,CAAC,OAA1C,uBACI,KAAC,WAAD,EAAa,UAAU,CAAC,MAAxB,EADJ,EADJ,cAII,KAAC,SAAD,EAAW,MAAM,CAAC,OAAlB,EAJJ,cAKI,KAAC,SAAD,EAAW,SAAS,KAApB,CAAqB,MAAM,CAAC,MAA5B,EALJ,GADJ,GAD2B,EAAxB","sourcesContent":["import * as React from \"react\";\nimport { \n    List, Datagrid, TextField, ReferenceField, EditButton, \n    Filter, ReferenceInput, SelectInput, TextInput, SimpleForm, Edit, Create, SimpleList } from 'react-admin';\nimport { useMediaQuery } from '@material-ui/core';\n\n\nexport const PostFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\n        <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\" allowEmpty>\n            <SelectInput optionText=\"name\" />\n        </ReferenceInput>\n    </Filter>\n);\n\nexport const PostList = (props) => {\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n\n    return (\n        <List filters={<PostFilter />} {...props}>\n            {isSmall ? (\n                <SimpleList\n                    primaryText={record => record.title}\n                    secondaryText={record => `${record.views} views`}\n                    tertiaryText={record => new Date(record.published_at).toLocaleDateString()}\n                />\n            ) : (\n                <Datagrid>\n                    <TextField source=\"id\" />\n                    <ReferenceField source=\"userId\" reference=\"users\">\n                        <TextField source=\"name\" />\n                    </ReferenceField>\n                    <TextField source=\"title\" />\n                    <TextField source=\"body\" />\n                    <EditButton />\n                </Datagrid>\n            )}\n        </List>\n    );\n}\n\nconst PostTitle = ({ record }) => {\n    return <span>Post {record ? `\"${record.title}\"` : ''}</span>;\n};\n\nexport const PostEdit = props => (\n    <Edit title={<PostTitle />} {...props}>\n        <SimpleForm>\n            <TextInput disabled source=\"id\" />\n            <ReferenceInput source=\"userId\" reference=\"users\">\n                {/* <SelectInput optionText=\"id\" /> */}\n                <SelectInput optionText=\"name\" />\n            </ReferenceInput>\n            {/* <TextInput source=\"id\" /> */}\n            <TextInput source=\"title\" />\n            {/* <TextInput source=\"body\" /> */}\n            <TextInput multiline source=\"body\" />\n        </SimpleForm>\n    </Edit>\n);\n\nexport const PostCreate = props => (\n    <Create {...props}>\n        <SimpleForm>\n            <ReferenceInput source=\"userId\" reference=\"users\">\n                <SelectInput optionText=\"name\" />\n            </ReferenceInput>\n            <TextInput source=\"title\" />\n            <TextInput multiline source=\"body\" />\n        </SimpleForm>\n    </Create>\n);"]},"metadata":{},"sourceType":"module"}