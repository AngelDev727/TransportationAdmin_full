{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/MyDATA/Mega_data/Project/2020/2020-11/08-TransportationAdmin/tb-admin 2/src/components/DateTimeField.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst getDateTime = value => {\n  if (value === undefined) {\n    return \"\";\n  } else {\n    const timestamp = new Date(value === undefined ? new Date() : value * 1000);\n    return timestamp.toLocaleString();\n  }\n};\n\nconst DateTimeField = ({\n  source,\n  record = {}\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: getDateTime(record[source])\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 52\n}, this);\n\n_c = DateTimeField;\nDateTimeField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired\n};\nexport default DateTimeField;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateTimeField\");","map":{"version":3,"sources":["/Volumes/MyDATA/Mega_data/Project/2020/2020-11/08-TransportationAdmin/tb-admin 2/src/components/DateTimeField.js"],"names":["React","PropTypes","getDateTime","value","undefined","timestamp","Date","toLocaleString","DateTimeField","source","record","propTypes","label","string","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,MAAIA,KAAK,KAAKC,SAAd,EAAyB;AACrB,WAAO,EAAP;AACH,GAFD,MAEO;AACH,UAAMC,SAAS,GAAG,IAAIC,IAAJ,CAASH,KAAK,KAAKC,SAAV,GAAsB,IAAIE,IAAJ,EAAtB,GAAmCH,KAAK,GAAG,IAApD,CAAlB;AACA,WAAOE,SAAS,CAACE,cAAV,EAAP;AACH;AAEJ,CARD;;AASA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAM,GAAG;AAAnB,CAAD,kBAA6B;AAAA,YAAOR,WAAW,CAACQ,MAAM,CAACD,MAAD,CAAP;AAAlB;AAAA;AAAA;AAAA;AAAA,QAAnD;;KAAMD,a;AAENA,aAAa,CAACG,SAAd,GAA0B;AACtBC,EAAAA,KAAK,EAAEX,SAAS,CAACY,MADK;AAEtBH,EAAAA,MAAM,EAAET,SAAS,CAACa,MAFI;AAGtBL,EAAAA,MAAM,EAAER,SAAS,CAACY,MAAV,CAAiBE;AAHH,CAA1B;AAMA,eAAeP,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst getDateTime = value => {\n    if (value === undefined) {\n        return \"\";\n    } else {\n        const timestamp = new Date(value === undefined ? new Date() : value * 1000);\n        return timestamp.toLocaleString();\n    }\n    \n};\nconst DateTimeField = ({ source, record = {} }) => <span>{getDateTime(record[source])}</span>;\n\nDateTimeField.propTypes = {\n    label: PropTypes.string,\n    record: PropTypes.object,\n    source: PropTypes.string.isRequired,\n};\n\nexport default DateTimeField;"]},"metadata":{},"sourceType":"module"}