{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rapunzel/Documents/tb-admin/src/models/NotificationList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { List, Datagrid, TextField, Show, SimpleShowLayout, DeleteButton, SimpleList } from 'react-admin';\nimport { useMediaQuery } from '@material-ui/core';\nimport { PostFilter } from '../components';\nexport const NotificationList = props => {\n  _s();\n\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm')); //   <List {...props} >\n  //     <Datagrid rowClick=\"show\">\n  //       <TextField label=\"Location\" source=\"address\" />\n  //       <CommentField label=\"Comments\" source=\"id\" />\n  //       <AudioPlayerField label=\"Voice\" source=\"voice_url\" />\n  //       <ConditionBooleanField source=\"report_users\" />\n  //     </Datagrid>\n  //   </List>\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    filters: /*#__PURE__*/_jsxDEV(PostFilter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 24\n    }, this),\n    ...props,\n    children: isSmall ? /*#__PURE__*/_jsxDEV(SimpleList, {\n      primaryText: record => record.title,\n      secondaryText: record => `${record.views} views`,\n      tertiaryText: record => new Date(record.published_at).toLocaleDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Datagrid, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Title\",\n        source: \"report_title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Content\",\n        source: \"report_content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Title\",\n        source: \"report_timestamp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotificationList, \"+XqJ9UG1ndrE6RgM1+kla/ovLjc=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = NotificationList;\nexport const NotificationShow = props => /*#__PURE__*/_jsxDEV(Show, { ...props,\n  children: /*#__PURE__*/_jsxDEV(SimpleShowLayout, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Title\",\n      source: \"report_title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Content\",\n      source: \"report_content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Title\",\n      source: \"report_timestamp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 3\n}, this);\n_c2 = NotificationShow;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NotificationList\");\n$RefreshReg$(_c2, \"NotificationShow\");","map":{"version":3,"sources":["/Users/rapunzel/Documents/tb-admin/src/models/NotificationList.js"],"names":["React","List","Datagrid","TextField","Show","SimpleShowLayout","DeleteButton","SimpleList","useMediaQuery","PostFilter","NotificationList","props","isSmall","theme","breakpoints","down","record","title","views","Date","published_at","toLocaleDateString","NotificationShow"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EACQC,QADR,EACkBC,SADlB,EAEEC,IAFF,EAEQC,gBAFR,EAGEC,YAHF,EAGgBC,UAHhB,QAIO,aAJP;AAKA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,QAA2B,eAA3B;AAGA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAEvC,QAAMC,OAAO,GAAGJ,aAAa,CAACK,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAV,CAA7B,CAFuC,CAG3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,sBACI,QAAC,IAAD;AAAM,IAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAf;AAAA,OAAmCJ,KAAnC;AAAA,cACKC,OAAO,gBACJ,QAAC,UAAD;AACI,MAAA,WAAW,EAAEI,MAAM,IAAIA,MAAM,CAACC,KADlC;AAEI,MAAA,aAAa,EAAED,MAAM,IAAK,GAAEA,MAAM,CAACE,KAAM,QAF7C;AAGI,MAAA,YAAY,EAAEF,MAAM,IAAI,IAAIG,IAAJ,CAASH,MAAM,CAACI,YAAhB,EAA8BC,kBAA9B;AAH5B;AAAA;AAAA;AAAA;AAAA,YADI,gBAOJ,QAAC,QAAD;AAAA,8BAQK,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAyB,QAAA,MAAM,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,cARL,eASK,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,SAAjB;AAA2B,QAAA,MAAM,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cATL,eAUK,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAyB,QAAA,MAAM,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAVL,eAWI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CApCM;;GAAMX,gB;UAEOF,a;;;KAFPE,gB;AAsCb,OAAO,MAAMY,gBAAgB,GAAGX,KAAK,iBACnC,QAAC,IAAD,OAAUA,KAAV;AAAA,yBACE,QAAC,gBAAD;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAyB,MAAA,MAAM,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,SAAjB;AAA2B,MAAA,MAAM,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAyB,MAAA,MAAM,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADK;MAAMW,gB","sourcesContent":["import React from 'react';\nimport {\n  List, Datagrid, TextField, \n  Show, SimpleShowLayout,\n  DeleteButton, SimpleList\n} from 'react-admin';\nimport { useMediaQuery } from '@material-ui/core';\nimport { PostFilter } from '../components';\n\n\nexport const NotificationList = (props) => {\n\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n//   <List {...props} >\n//     <Datagrid rowClick=\"show\">\n//       <TextField label=\"Location\" source=\"address\" />\n//       <CommentField label=\"Comments\" source=\"id\" />\n//       <AudioPlayerField label=\"Voice\" source=\"voice_url\" />\n//       <ConditionBooleanField source=\"report_users\" />\n//     </Datagrid>\n//   </List>\n    return (\n        <List filters={<PostFilter />} {...props}>\n            {isSmall ? (\n                <SimpleList\n                    primaryText={record => record.title}\n                    secondaryText={record => `${record.views} views`}\n                    tertiaryText={record => new Date(record.published_at).toLocaleDateString()}\n                />\n            ) : (\n                <Datagrid>\n                    {/* <TextField source=\"id\" />\n                    <ReferenceField source=\"userId\" reference=\"users\">\n                        <TextField source=\"name\" />\n                    </ReferenceField>\n                    <TextField source=\"title\" />\n                    <TextField source=\"body\" />\n                     */}\n                     <TextField label=\"Title\" source=\"report_title\" />\n                     <TextField label=\"Content\" source=\"report_content\" />\n                     <TextField label=\"Title\" source=\"report_timestamp\" />\n                    <DeleteButton />\n                </Datagrid>\n            )}\n        </List>\n    )\n};\n\nexport const NotificationShow = props => (\n  <Show {...props}>\n    <SimpleShowLayout>\n        <TextField label=\"Title\" source=\"report_title\" />\n        <TextField label=\"Content\" source=\"report_content\" />\n        <TextField label=\"Title\" source=\"report_timestamp\" />\n        <DeleteButton />\n    </SimpleShowLayout>\n  </Show>\n);\n"]},"metadata":{},"sourceType":"module"}