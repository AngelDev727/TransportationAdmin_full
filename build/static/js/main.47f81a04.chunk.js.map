{"version":3,"sources":["lib/AuthProvider.js","lib/methods.js","lib/RestProvider.js","components/MyLogoutButton.js","components/DateTimeField.js","components/DashChart.js","models/Dashboard.js","models/NotificationList.js","models/Users.js","App.js","reportWebVitals.js","index.js"],"names":["baseConfig","userProfilePath","userAdminProp","localStorageTokenName","handleAuthStateChange","auth","config","a","firebase","firestore","doc","user","uid","get","snapshot","profile","data","console","log","getIdToken","firebaseToken","localStorage","setItem","signOut","removeItem","Error","firebaseLoaded","Promise","resolve","onAuthStateChanged","type","params","AUTH_LOGOUT","catch","currentUser","reload","AUTH_CHECK","AUTH_GET_PERMISSIONS","getIdTokenResult","token","claims","AUTH_LOGIN","username","password","alreadySignedIn","signInWithEmailAndPassword","convertFileToBase64","file","reject","reader","FileReader","readAsDataURL","rawFile","onload","result","onerror","getImageSize","img","document","createElement","width","this","height","src","upload","fieldName","submitedData","id","resourceName","resourcePath","Array","isArray","name","ref","storage","child","put","getDownloadURL","downloadURL","uploadedAt","Date","indexOf","imageSize","error","save","previous","firebaseSaveFilter","uploadResults","isNew","timestampFieldNames","map","uploadResult","Object","assign","createdAt","updatedAt","set","del","uploadFields","length","delete","delMany","ids","previousData","getOne","resourceData","collection","exists","getList","pagination","values","snapshots","docs","push","filter","item","meetsFilters","keys","key","sort","sortBy","order","field","i","page","perPage","_start","_end","slice","total","getMany","getManyReference","target","getItemID","itemId","CREATE","addUploadFeature","requestHandler","resource","image","formerPictures","p","File","newPictures","all","then","base64Pictures","picture64","title","transformedNewPictures","BaseConfiguration","initialQuerytimeout","RestProvider","firebaseConfig","options","trackedResources","resourcesStatus","resourcesData","resourcesPaths","resourcesUploadFields","apps","initializeApp","setPersistence","Auth","Persistence","SESSION","Methods","index","path","GET_LIST","GET_MANY","GET_MANY_REFERENCE","GET_ONE","DELETE","DELETE_MANY","UPDATE","uploads","currentData","MyLogoutButton","forwardRef","props","logout","useLogout","MenuItem","onClick","DateTimeField","value","source","record","undefined","toLocaleString","getTimestampFirstDayOfKey","datetype","date","setDate","setHours","setMinutes","setSeconds","setMonth","Math","round","Number","valueOf","getDateTime","timestamp","year","getFullYear","month","getMonth","toString","toLocaleDateString","DashChart","dataProvider","useDataProvider","useState","setData","loading","setLoading","setError","useEffect","chartData","Loading","preDate","answer","report_timestamp","selDate","Notifications","margin","top","right","left","bottom","strokeDasharray","dataKey","stroke","fill","getDateByKey","Card","CardHeader","CardContent","NotificationList","isSmall","useMediaQuery","theme","breakpoints","down","List","SimpleList","primaryText","report_title","secondaryText","report_content","tertiaryText","linkType","canEdit","Datagrid","rowClick","TextField","label","DeleteButton","CustomShowActions","basePath","TopToolbar","undoable","NotificationShow","Show","actions","SimpleShowLayout","UserList","user_name","user_email","created_timestamp","EmailField","EditTitle","UserEdit","Edit","SimpleForm","TextInput","disabled","hidden","defaultValue","UserCreate","Create","authConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Admin","dashboard","Dashboard","authProvider","AuthProvider","logoutButton","Resource","list","show","icon","AnnouncementIcon","edit","create","UserIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.47f81a04.chunk.js","sourcesContent":["/* globals localStorage */\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_CHECK, AUTH_GET_PERMISSIONS } from 'react-admin';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst baseConfig = {\n    userProfilePath: '/admin/',\n    userAdminProp: 'is_admin',\n    localStorageTokenName: 'RAFirebaseClientToken',\n    handleAuthStateChange: async (auth, config) => {\n        if (auth) {\n            const snapshot = await firebase\n            .firestore()\n            .doc(config.userProfilePath + auth.user.uid)\n            .get();\n            const profile = snapshot.data();\n\n            console.log(\"gisng\", config.userProfilePath + auth.user.uid);\n            if (profile && profile[config.userAdminProp]) {\n                const firebaseToken = await auth.user.getIdToken();\n                let user = { auth, profile, firebaseToken };\n                localStorage.setItem(config.localStorageTokenName, firebaseToken);\n                return user;\n            } else {\n                firebase.auth().signOut();\n                localStorage.removeItem(config.localStorageTokenName);\n                throw new Error('sign_in_error');\n        }\n        } else {\n            localStorage.removeItem(config.localStorageTokenName);\n            throw new Error('sign_in_error');\n        }\n    }\n};\n\nexport default (config = {}) => {\n    config = { ...baseConfig, ...config };\n\n    const firebaseLoaded = () =>\n        new Promise(resolve => {\n            firebase.auth().onAuthStateChanged(resolve);\n        });\n\n    return async (type, params) => {\n        if (type === AUTH_LOGOUT) {\n            config.handleAuthStateChange(null, config).catch(() => {});\n            return firebase.auth().signOut();\n        }\n\n        if (firebase.auth().currentUser) {\n            await firebase.auth().currentUser.reload();\n        }\n\n        if (type === AUTH_CHECK) {\n            await firebaseLoaded();\n\n            if (!firebase.auth().currentUser) {\n                throw new Error('sign_in_error');\n            }\n            return true;\n        }\n\n        if (type === AUTH_GET_PERMISSIONS) {\n            console.log('AUTH_GET_PERMISSIONS');\n            await firebaseLoaded();\n\n            if (!firebase.auth().currentUser) {\n                throw new Error('sign_in_error');\n            }\n\n            const token = await firebase.auth().currentUser.getIdTokenResult();\n            return token.claims;\n        }\n\n        if (type === AUTH_LOGIN) {\n            const { username, password, alreadySignedIn } = params;\n            let auth = firebase.auth().currentUser;\n\n            if (!auth || !alreadySignedIn) {\n                auth = await firebase.auth().signInWithEmailAndPassword(username, password);\n            }\n            return config.handleAuthStateChange(auth, config);\n        }\n\n        return false;\n    };\n};","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport sortBy from 'sort-by';\nimport { CREATE } from 'react-admin';\n\nconst convertFileToBase64 = file =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file.rawFile);\n\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = reject;\n  });\n\nconst addUploadFeature = requestHandler => (type, resource, params) => {\n  if (type === 'UPDATE') {\n    if (params.data.image && params.data.image.length) {\n      const formerPictures = params.data.image.filter(p => !(p.rawFile instanceof File));\n      const newPictures = params.data.image.filter(p => p.rawFile instanceof File);\n\n      return Promise.all(newPictures.map(convertFileToBase64))\n        .then(base64Pictures =>\n          base64Pictures.map(picture64 => ({\n            src: picture64,\n            title: `${params.data.title}`\n          }))\n        )\n        .then(transformedNewPictures =>\n          requestHandler(type, resource, {\n            ...params,\n            data: {\n              ...params.data,\n              image: [...transformedNewPictures, ...formerPictures]\n            }\n          })\n        );\n    }\n  }\n  // for other request types and reources, fall back to the defautl request handler\n  return requestHandler(type, resource, params);\n};\n\nconst getImageSize = file => {\n  return new Promise(resolve => {\n    const img = document.createElement('img');\n    img.onload = function() {\n      resolve({\n        width: this.width,\n        height: this.height\n      });\n    };\n    img.src = file.src;\n  });\n};\n\nconst upload = async (fieldName, submitedData, id, resourceName, resourcePath) => {\n  let file = submitedData[fieldName];\n  if (!file) {\n    return false;\n  }\n  \n  file = Array.isArray(file) ? file[0] : file;\n  \n  const rawFile = file.rawFile;\n\n  const result = {};\n  if (file && rawFile && rawFile.name) {\n    const ref = firebase\n      .storage()\n      .ref()\n      .child(`${resourcePath}/${id}/${fieldName}`);\n    const snapshot = await ref.put(rawFile);\n    const downloadURL = await snapshot.ref.getDownloadURL();\n    result[fieldName] = [{}];\n    result[fieldName][0].uploadedAt = new Date();\n    result[fieldName][0].src = downloadURL;\n    result[fieldName][0].type = rawFile.type;\n    result[fieldName][0].name = rawFile.name;\n    if (rawFile.type.indexOf('image/') === 0) {\n      try {\n        const imageSize = await getImageSize(file);\n        result[fieldName][0].width = imageSize.width;\n        result[fieldName][0].height = imageSize.height;\n      } catch (e) {\n        console.error(`Failed to get image dimensions`);\n      }\n    }\n    return result;\n  }\n  return false;\n};\n\nconst save = async (\n  id,\n  data,\n  previous,\n  resourceName,\n  resourcePath,\n  firebaseSaveFilter,\n  uploadResults,\n  isNew,\n  timestampFieldNames\n) => {\n  if (uploadResults) {\n    uploadResults.map(uploadResult => (uploadResult ? Object.assign(data, uploadResult) : false));\n  }\n\n  if (isNew) {\n    Object.assign(data, { [timestampFieldNames.createdAt]: new Date() });\n  }\n\n  data = Object.assign(previous, { [timestampFieldNames.updatedAt]: new Date() }, data);\n\n  if (!data.id) {\n    data.id = id;\n  }\n\n  await firebase\n    .firestore()\n    .doc(`${resourcePath}/${data.id}`)\n    .set(firebaseSaveFilter(data));\n  return { data };\n};\n\nconst del = async (id, resourceName, resourcePath, uploadFields) => {\n  if (uploadFields.length) {\n    uploadFields.map(fieldName =>\n      firebase\n        .storage()\n        .ref()\n        .child(`${resourcePath}/${id}/${fieldName}`)\n        .delete()\n    );\n  }\n\n  await firebase\n    .firestore()\n    .doc(`${resourcePath}/${id}`)\n    .delete();\n  return { data: id };\n};\n\nconst delMany = async (ids, resourceName, previousData) => {\n  await ids.map(id =>\n    firebase\n      .firestore()\n      .doc(`${resourceName}/${id}`)\n      .delete()\n  );\n  return { data: ids };\n};\n\nconst getItemID = (params, type, resourceName, resourcePath, resourceData) => {\n  let itemId = params.data.id || params.id || params.data.key || params.key;\n  if (!itemId) {\n    itemId = firebase\n      .firestore()\n      .collection(resourcePath)\n      .doc().id;\n  }\n\n  if (!itemId) {\n    throw new Error('ID is required');\n  }\n\n  if (resourceData && resourceData[itemId] && type === CREATE) {\n    throw new Error('ID already in use');\n  }\n\n  return itemId;\n};\n\nconst getOne = async (params, resourceName, resourceData) => {\n  if (params.id) {\n    let result = await firebase\n      .firestore()\n      .collection(resourceName)\n      .doc(params.id)\n      .get();\n\n    if (result.exists) {\n      const data = result.data();\n\n      if (data && data.id == null) {\n        data['id'] = result.id;\n      }\n      return { data: data };\n    } else {\n      throw new Error('Id not found');\n    }\n  } else {\n    throw new Error('Id not found');\n  }\n};\n\n/**\n * params example:\n * pagination: { page: 1, perPage: 5 },\n * sort: { field: 'title', order: 'ASC' },\n * filter: { author_id: 12 }\n */\n\nconst getList = async (params, resourceName, resourceData) => {\n  if (params.pagination) {\n    let values = [];\n    let snapshots = await firebase\n      .firestore()\n      .collection(resourceName)\n      .get();\n\n    for (const snapshot of snapshots.docs) {\n      const data = snapshot.data();\n      if (data && data.id == null) {\n        data['id'] = snapshot.id;\n      }\n      values.push(data);\n    }\n\n    if (params.filter) {\n      values = values.filter(item => {\n        let meetsFilters = true;\n        for (const key of Object.keys(params.filter)) {\n          meetsFilters = item[key] === params.filter[key];\n        }\n        return meetsFilters;\n      });\n    }\n\n    if (params.sort) {\n      values.sort(sortBy(`${params.sort.order === 'ASC' ? '' : '-'}${params.sort.field}`));\n    }\n\n    const keys = values.map(i => i.id);\n    const { page, perPage } = params.pagination;\n    const _start = (page - 1) * perPage;\n    const _end = page * perPage;\n    const data = values ? values.slice(_start, _end) : [];\n    const ids = keys.slice(_start, _end) || [];\n    const total = values ? values.length : 0;\n    return { data, ids, total };\n  } else {\n    throw new Error('Error processing request');\n  }\n};\n\nconst getMany = async (params, resourceName, resourceData) => {\n  let data = [];\n  /* eslint-disable no-await-in-loop */\n  for (const id of params.ids) {\n    let { data: item } = await getOne({ id }, resourceName, resourceData);\n    data.push(item);\n  }\n  return { data };\n};\n\nconst getManyReference = async (params, resourceName, resourceData) => {\n  if (params.target) {\n    if (!params.filter) params.filter = {};\n    params.filter[params.target] = params.id;\n    let { data, total } = await getList(params, resourceName, resourceData);\n    return { data, total };\n  } else {\n    throw new Error('Error processing request');\n  }\n};\n\nexport default {\n  upload,\n  save,\n  del,\n  delMany,\n  getItemID,\n  getOne,\n  getList,\n  getMany,\n  getManyReference,\n  addUploadFeature,\n  convertFileToBase64\n};","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport Methods from './methods';\n\nimport { GET_LIST, GET_ONE, GET_MANY, GET_MANY_REFERENCE, CREATE, UPDATE, DELETE, DELETE_MANY } from 'react-admin';\n\n/**\n * @param {string[]|Object[]} trackedResources Array of resource names or array of Objects containing name and\n * optional path properties (path defaults to name)\n * @param {Object} firebaseConfig Options Firebase configuration\n */\n\nconst BaseConfiguration = {\ninitialQuerytimeout: 10000,\ntimestampFieldNames: {\n    createdAt: 'createdAt',\n    updatedAt: 'updatedAt'\n}\n};\n\nconst RestProvider = (firebaseConfig = {}, options = {}) => {\n    options = Object.assign({}, BaseConfiguration, options);\n    const { timestampFieldNames, trackedResources } = options;\n\n    const resourcesStatus = {};\n    // const resourcesReferences = {};\n    const resourcesData = {};\n    const resourcesPaths = {};\n    const resourcesUploadFields = {};\n\n    if (firebase.apps.length === 0) {\n        firebase.initializeApp(firebaseConfig);\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION);\n    }\n\n    /* Functions */\n    const upload = options.upload || Methods.upload;\n    const save = options.save || Methods.save;\n    const del = options.del || Methods.del;\n    const getItemID = options.getItemID || Methods.getItemID;\n    const getOne = options.getOne || Methods.getOne;\n    const getMany = options.getMany || Methods.getMany;\n    const getManyReference = options.getManyReference || Methods.getManyReference;\n    const delMany = options.delMany || Methods.delMany;\n    const getList = options.getList || Methods.getList;\n\n    const firebaseSaveFilter = options.firebaseSaveFilter ? options.firebaseSaveFilter : data => data;\n    // const firebaseGetFilter = options.firebaseGetFilter ? options.firebaseGetFilter : data => data;\n\n    // Sanitize Resources\n    trackedResources.map((resource, index) => {\n        if (typeof resource === Array) {\n        resource = {\n            name: resource['name'],\n            path: resource['path'] || resource['name'],\n            uploadFields: resource['uploadFields'] || []\n        };\n        trackedResources[index] = resource;\n        }\n\n        const { name, path, uploadFields } = resource;\n        if (!resource.name) {\n        throw new Error(`name is missing from resource ${resource}`);\n        }\n        resourcesUploadFields[name] = uploadFields || [];\n        resourcesPaths[name] = path || name;\n        resourcesData[name] = {};\n    });\n\n    /**\n     * @param {string} type Request type, e.g GET_LIST\n     * @param {string} resourceName Resource name, e.g. \"posts\"\n     * @param {Object} payload Request parameters. Depends on the request type\n     * @returns {Promise} the Promise for a REST response\n     */\n\n    return async (type, resourceName, params) => {\n        await resourcesStatus[resourceName];\n        let result = null;\n        switch (type) {\n        case GET_LIST:\n            // console.log(params);\n            result = await getList(params, resourcesPaths[resourceName], resourcesData[resourceName]);\n            return result;\n        case GET_MANY:\n            result = await getMany(params, resourcesPaths[resourceName], resourcesData[resourceName]);\n            // console.log('GET_MANY');\n            return result;\n\n        case GET_MANY_REFERENCE:\n            // console.log('GET_MANY_REFERENCE');\n            result = await getManyReference(params, resourcesPaths[resourceName], resourcesData[resourceName]);\n            return result;\n\n        case GET_ONE:\n            // console.log('GET_ONE');\n            result = await getOne(params, resourcesPaths[resourceName], resourcesData[resourceName]);\n            return result;\n\n        case DELETE:\n            // console.log('DELETE');\n            const uploadFields = resourcesUploadFields[resourceName] ? resourcesUploadFields[resourceName] : [];\n            result = await del(params.id, resourceName, resourcesPaths[resourceName], uploadFields);\n            return result;\n\n        case DELETE_MANY:\n            // console.log('DELETE_MANY');\n            result = await delMany(params.ids, resourcesPaths[resourceName], resourcesData[resourceName]);\n            return result;\n        case UPDATE:\n        case CREATE:\n            // console.log('UPDATE/CREATE');\n            let itemId = getItemID(params, type, resourceName, resourcesPaths[resourceName], resourcesData[resourceName]);\n            const uploads = resourcesUploadFields[resourceName]\n            ? resourcesUploadFields[resourceName].map(field =>\n                upload(field, params.data, itemId, resourceName, resourcesPaths[resourceName])\n                )\n            : [];\n            \n            const currentData = resourcesData[resourceName][itemId] || {};\n            const uploadResults = await Promise.all(uploads);\n            \n            result = await save(\n            itemId,\n            params.data,\n            currentData,\n            resourceName,\n            resourcesPaths[resourceName],\n            firebaseSaveFilter,\n            uploadResults,\n            type === CREATE,\n            timestampFieldNames\n            );\n            return result;\n\n        default:\n            console.error('Undocumented method: ', type);\n            return { data: [] };\n        }\n    };\n};\n\nexport default RestProvider;","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { useLogout } from 'react-admin';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ExitIcon from '@material-ui/icons/PowerSettingsNew';\n\nconst MyLogoutButton = forwardRef((props, ref) => {\n    const logout = useLogout();\n    const handleClick = () => logout();\n    return (\n        <MenuItem\n            onClick={handleClick}\n            ref={ref}\n        >\n            <ExitIcon /> Logout\n        </MenuItem>\n    );\n});\n\nexport default MyLogoutButton;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst getDateTime = value => {\n    if (value === undefined) {\n        return \"\";\n    } else {\n        const timestamp = new Date(value === undefined ? new Date() : value * 1000);\n        return timestamp.toLocaleString();\n    }\n    \n};\nconst DateTimeField = ({ source, record = {} }) => <span>{getDateTime(record[source])}</span>;\n\nDateTimeField.propTypes = {\n    label: PropTypes.string,\n    record: PropTypes.object,\n    source: PropTypes.string.isRequired,\n};\n\nexport default DateTimeField;","import React, { useState, useEffect } from 'react';\nimport { useDataProvider, Loading, Error} from 'react-admin';\nimport { ResponsiveContainer, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip} from 'recharts';\nimport PropTypes from 'prop-types';\n\nfunction getTimestampFirstDayOfKey(datetype) {\n    var date = new Date();\n    date.setDate(1);\n    date.setHours(0);\n    date.setMinutes(0);\n    date.setSeconds(0);\n    \n    if (datetype === \"month\") {\n        return Math.round(Number(date.valueOf() / 1000));\n    } else {\n        date.setMonth(0);\n        return Math.round(Number(date.valueOf() / 1000));\n    }\n}\n\nconst getDateTime = (value, datetype) => {\n    if (value === undefined) {\n        return \"\";\n    } else {\n        const timestamp = new Date(value === undefined ? new Date() : value * 1000);\n        var year = timestamp.getFullYear();\n        var month = (1 + timestamp.getMonth()).toString();\n        month = month.length > 1 ? month : '0' + month;\n        \n        // return timestamp.toLocaleString();\n        if (datetype === \"month\")\n            return timestamp.toLocaleDateString();\n        else \n            return month + \"/\" + year;\n    }\n};\n\nconst DashChart = ({ datetype }) => {\n\n    const dataProvider = useDataProvider();\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        dataProvider('GET_LIST', 'notifications', {\n            sort: { field: 'report_timestamp', order: 'ASC' },\n            pagination: { page: 1, perPage: 10000000 },\n        })\n            .then(({ data, total }) => {\n                setData(data);              \n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            })\n    }, []);\n\n    var chartData = [];\n    if (loading) return <Loading />;\n    if (error) return <Error />;\n\n    var preDate = \"\"\n    data.map(async answer => {\n        if (!data || data.length === 0) {\n            return;\n        }\n\n        if (answer.report_timestamp < getTimestampFirstDayOfKey(datetype)) {\n            return;\n        }\n\n        const selDate = getDateTime(answer.report_timestamp, datetype);\n\n        if (preDate === selDate) {\n            chartData[chartData.length - 1].Notifications += 1;\n        } else {\n            chartData[chartData.length] = {\n                name: selDate,\n                Notifications  : 1\n            };\n            preDate = selDate;\n        }\n    });\n\n    return (\n        <ResponsiveContainer height={300} width='99%'>\n            <AreaChart \n            // width={500} height={400} \n            data={chartData} margin={{ top: 10, right: 30, left: 30, bottom: 0}}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"Notifications\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n            </AreaChart>\n        </ResponsiveContainer>  \n        \n    );\n}\n\nDashChart.propTypes = {\n    datetype: PropTypes.string.isRequired,\n};\n\nexport default DashChart;","import * as React from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\nimport {DashChart} from '../components'\n\nfunction getDateByKey(value) {\n    var date = new Date();\n    var year = date.getFullYear();\n    var month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : '0' + month;\n\n    if (value === \"month\")\n        return month + \"/\" + year;\n    else \n        return year;\n}\n\nexport default () => (\n    <Card>\n        <CardHeader title=\"Welcome to the administration\" />\n        <CardContent>Number of notifications per day this month ({getDateByKey(\"month\")}): </CardContent>\n        <DashChart datetype=\"month\"/>\n        <br />\n        <CardContent>Number of notifications per day this year ({getDateByKey(\"year\")}):</CardContent>\n        <DashChart datetype=\"year\"/>\n    </Card>\n);","import React from 'react';\nimport {\n  List, Datagrid, TextField,\n  Show, SimpleShowLayout, SimpleList,\n  DeleteButton, TopToolbar\n} from 'react-admin';\nimport { useMediaQuery} from '@material-ui/core';\nimport {DateTimeField} from '../components'\n\n\nexport const NotificationList = (props) => {\n\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n    return (\n        <List {...props} sort={{ field: 'report_timestamp', order: 'DESC' }}>\n            {isSmall ? (\n                <SimpleList\n                    primaryText={record => record.report_title}\n                    secondaryText={record => `${record.report_content} views`}\n                    tertiaryText={record => new Date(record.report_timestamp * 1000).toLocaleDateString()}\n                    linkType={record => record.canEdit ? \"edit\" : \"show\"}\n                />\n            ) : (\n                <Datagrid rowClick=\"show\">\n                    <TextField label=\"Title\" source=\"report_title\" />\n                    <TextField label=\"Content\" source=\"report_content\" />\n                    <DateTimeField label='Date' source='report_timestamp' />\n                    <TextField label='Sender Name' source='sender_name'/>\n                    <DeleteButton label='Delete'/>\n                </Datagrid>\n            )}\n        </List>\n    )\n};\n\n\nconst CustomShowActions = ({ basePath, data, resource }) => (\n    <TopToolbar>\n        {/* <EditButton basePath={basePath} record={data} /> */}\n        <DeleteButton undoable={false} basePath={basePath} record={data} resource={resource}/>\n    </TopToolbar>\n);\n\nexport const NotificationShow = props => (\n  <Show actions={<CustomShowActions />} {...props}>\n    <SimpleShowLayout>\n        <TextField label=\"Title\" source=\"report_title\" />\n        <TextField label=\"Content\" source=\"report_content\" />\n        <DateTimeField label=\"Date\" source=\"report_timestamp\" />\n        {/* <DeleteButton basePath={props.basePath} record={props.record} resource={props.resource}/> */}\n    </SimpleShowLayout>\n  </Show>\n);\n\n","import * as React from \"react\";\nimport { \n    List, Datagrid, SimpleList, TextField, EmailField,\n    SimpleForm, Create, TextInput, Edit,\n    EditButton\n} from 'react-admin';\nimport { useMediaQuery} from '@material-ui/core';\nimport {DateTimeField} from '../components'\n\nexport const UserList = (props) => {\n\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n    return (\n        <List {...props}>\n            {isSmall ? (\n                <SimpleList\n                    primaryText={record => record.user_name}\n                    secondaryText={record => `${record.user_email} views`}\n                    tertiaryText={record => new Date(record.created_timestamp * 1000).toLocaleDateString()}\n                    linkType={record => record.canEdit ? \"edit\" : \"show\"}\n                />\n            ) : (\n                <Datagrid rowClick=\"show\">\n                    <TextField source=\"user_name\" />\n                    <EmailField source=\"user_email\" />\n                    <DateTimeField label='Date' source=\"created_timestamp\" />\n                    {/* <EditButton label=\"Edit\"/> */}\n                </Datagrid>\n            )}\n        </List>\n    )\n};\n\n\nconst EditTitle = ({ record }) => {\n    return <span>Edit {record ? `\"${record.user_name}\"` : ''}</span>;\n};\n\nexport const UserEdit = props => (\n    <Edit title={<EditTitle />} {...props}>\n        <SimpleForm>\n            <TextInput source=\"user_name\" />\n            <TextInput source=\"user_email\" />\n            <TextInput disabled hidden={true} label=\"Created\" source=\"created_timestamp\" defaultValue={new Date()}/>\n        </SimpleForm>\n    </Edit>\n);\n\nexport const UserCreate = props => (\n    <Create {...props}>\n        <SimpleForm>\n            <TextInput source=\"user_name\" />\n            <TextInput source=\"user_email\" />\n            <TextInput source=\"user_password\" />\n        </SimpleForm>\n    </Create>\n);","import * as React from \"react\";\nimport { Admin, Resource} from 'react-admin';\n\nimport {AuthProvider, RestProvider} from './lib';\nimport {MyLogoutButton} from './components'\nimport {\n    Dashboard,\n    NotificationList, NotificationShow,\n    UserList, UserEdit, UserCreate\n} from './models'\n\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport UserIcon from '@material-ui/icons/Group';\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB7g7YOyd8nA3vbt96Xajnv_9BPzbxSqXk\",\n    authDomain: \"transportationbermuda.firebaseapp.com\",\n    databaseURL: \"https://transportationbermuda.firebaseio.com\",\n    projectId: \"transportationbermuda\",\n    storageBucket: \"transportationbermuda.appspot.com\",\n    messagingSenderId: \"119896054784\",\n    appId: \"1:119896054784:web:5591ed16d38fd7fd2bcce5\",\n    measurementId: \"G-82141WYBBL\"\n};\n\nconst trackedResources = [\n    { name: 'notifications', path: 'reports_test' },\n    { name: 'app_users', path: 'tokens' },\n    { name: 'owner_users', path: 'users' }\n];\n\nconst authConfig = {\n    userProfilePath: '/admin/',\n    userAdminProp: 'is_admin'\n};\n\nconst dataProvider = RestProvider(firebaseConfig, { trackedResources });\n\nconst App = () => (\n    <Admin title=\"TB Admin\" dashboard={Dashboard} authProvider={AuthProvider(authConfig)} dataProvider={dataProvider}  logoutButton={MyLogoutButton}>\n        <Resource name=\"notifications\" options={{ label: 'Notifications' }} list={NotificationList} show={NotificationShow} icon={AnnouncementIcon}/>\n        {/* <Resource name=\"app_users\" list={PostList} edit={PostEdit} create={PostCreate}  icon={PostIcon}/> */}\n        <Resource name=\"owner_users\" list={UserList} edit={UserEdit} create={UserCreate} icon={UserIcon}/>\n    </Admin>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}